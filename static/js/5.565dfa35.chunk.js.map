{"version":3,"sources":["utils/guard.js","components/candidate/delegate-form.js","components/candidate/withdraw-form.js","components/candidate/delegator-table.js","routes/candidate.js"],"names":["__webpack_require__","d","__webpack_exports__","CANDIDATE_STATUS","DelegateForm","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","_this$props","onClose","candidate","form","current","validateFields","err","values","value","contracts","Guard","methods","delegate","cacheSend","web3","utils","toWei","toString","React","createRef","drizzle","_this$props2","visible","formItems","name","field","fieldOptions","objectSpread","celrFieldOptions","placeholder","rules","message","required","react_default","a","createElement","modal","title","onOk","onCancel","components_form","ref","items","Component","contextTypes","PropTypes","object","WithdrawForm","intendWithdraw","columns","dataIndex","nestedColumns","DelegatorTable","expandedRowRender","record","dataSource","_","zip","intentAmounts","intentProposedTimes","map","_ref","_ref2","slicedToArray","intentAmount","intentProposedTime","formatCelrValue","table","pagination","delegators","delegator","args","delegatedStake","undelegatingStake","drizzleConnect","state","Candidate","toggleDelegateModal","setState","prevState","isDelegateModalVisible","toggleWithdrawModal","isWithdrawModalVisible","confirmWithdraw","candidateId","renderAction","menu","es_menu","Item","onClick","dropdown","overlay","className","icon","type","renderCandidateDetail","_this$state","_candidate$value","minSelfStake","stakingPool","status","row","style","marginTop","col","span","statistic","delegator_table","events","Delegate","fromBlock","filter","match","params","id","event","_event$returnValues","returnValues","getDelegatorInfo","cacheCall","_this$state2","card","extra","delegate_form","withdraw_form","skeleton","_props$Guard","candidates","getCandidateInfo","find"],"mappings":"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","file":"static/js/5.565dfa35.chunk.js","sourcesContent":["export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass DelegateForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose, candidate } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.Guard.methods.delegate.cacheSend(\n        candidate,\n        web3.utils.toWei(value.toString(), 'ether')\n      );\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR to delegate'\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true\n          }\n        ]\n      }\n    ];\n\n    return (\n      <Modal\n        title=\"Delegate Stake\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nDelegateForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nDelegateForm.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nexport default DelegateForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass WithdrawForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose, candidate } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.Guard.methods.intendWithdraw.cacheSend(\n        candidate,\n        web3.utils.toWei(value.toString(), 'ether')\n      );\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR to withdraw'\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true\n          }\n        ]\n      }\n    ];\n\n    return (\n      <Modal\n        title=\"Withdraw Stake\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nWithdrawForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nWithdrawForm.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nexport default WithdrawForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegator'\n  },\n  {\n    title: 'Delegated Stake',\n    dataIndex: 'delegatedStake'\n  },\n  {\n    title: 'Undelegating Stake',\n    dataIndex: 'undelegatingStake'\n  }\n];\n\nconst nestedColumns = [\n  {\n    title: 'Intent Amount',\n    dataIndex: 'intentAmount'\n  },\n  {\n    title: 'Intent Proposed Time',\n    dataIndex: 'intentProposedTime'\n  }\n];\n\nclass DelegatorTable extends React.Component {\n  expandedRowRender = record => {\n    const dataSource = _.zip(\n      record.intentAmounts,\n      record.intentProposedTimes\n    ).map(([intentAmount, intentProposedTime]) => ({\n      intentAmount: formatCelrValue(intentAmount),\n      intentProposedTime\n    }));\n\n    return (\n      <Table\n        columns={nestedColumns}\n        dataSource={dataSource}\n        pagination={false}\n      />\n    );\n  };\n\n  render() {\n    const { delegators } = this.props;\n\n    const dataSource = delegators.map(delegator => ({\n      ...delegator.value,\n      delegator: delegator.args[0],\n      delegatedStake: formatCelrValue(delegator.value.delegatedStake),\n      undelegatingStake: formatCelrValue(delegator.value.undelegatingStake)\n    }));\n\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n        expandedRowRender={this.expandedRowRender}\n      />\n    );\n  }\n}\n\nDelegatorTable.propTypes = {\n  delegators: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {}\n\nexport default drizzleConnect(DelegatorTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport {\n  Card,\n  Skeleton,\n  Statistic,\n  Row,\n  Col,\n  Menu,\n  Dropdown,\n  Icon\n} from 'antd';\n\nimport DelegateForm from '../components/candidate/delegate-form';\nimport WithdrawForm from '../components/candidate/withdraw-form';\nimport DelegatorTable from '../components/candidate/delegator-table';\nimport { formatCelrValue } from '../utils/unit';\nimport { CANDIDATE_STATUS } from '../utils/guard';\n\nclass Candidate extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      candidate: null,\n      isDelegateModalVisible: false,\n      isWithdrawModalVisible: false\n    };\n\n    this.contracts.Guard.events.Delegate(\n      {\n        fromBlock: 0,\n        filter: { candidate: props.match.params.id }\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        const { delegator, candidate } = event.returnValues;\n        this.contracts.Guard.methods.getDelegatorInfo.cacheCall(\n          delegator,\n          candidate\n        );\n      }\n    );\n  }\n\n  static getDerivedStateFromProps(props) {\n    const { match, Guard = {} } = props;\n    const candidateId = match.params.id;\n    const candidates = _.values(Guard.getCandidateInfo);\n    const candidate = _.find(\n      candidates,\n      candidate => candidate.args[0] === candidateId\n    );\n    const delegators = _.values(Guard.getDelegatorInfo).filter(\n      delegator => delegator.args[1] === candidateId\n    );\n\n    return { candidate, candidateId, delegators };\n  }\n\n  toggleDelegateModal = () => {\n    this.setState(prevState => ({\n      isDelegateModalVisible: !prevState.isDelegateModalVisible\n    }));\n  };\n\n  toggleWithdrawModal = () => {\n    this.setState(prevState => ({\n      isWithdrawModalVisible: !prevState.isWithdrawModalVisible\n    }));\n  };\n\n  confirmWithdraw = () => {\n    const { candidateId } = this.state;\n\n    this.contracts.Guard.methods.confirmWithdraw.cacheSend(candidateId);\n  };\n\n  renderAction = () => {\n    const menu = (\n      <Menu>\n        <Menu.Item onClick={this.toggleDelegateModal}>Delegate</Menu.Item>\n        <Menu.Item onClick={this.toggleWithdrawModal}>\n          Intend Withdraw\n        </Menu.Item>\n        <Menu.Item onClick={this.confirmWithdraw}>Confirm Withdraw</Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Dropdown overlay={menu}>\n        <a className=\"ant-dropdown-link\">\n          Actions <Icon type=\"down\" />\n        </a>\n      </Dropdown>\n    );\n  };\n\n  renderCandidateDetail = () => {\n    const { candidate, delegators } = this.state;\n    const { minSelfStake, stakingPool, status } = candidate.value;\n\n    return (\n      <Row style={{ marginTop: '10px' }}>\n        <Col span={12}>\n          <Statistic title=\"Address\" value={candidate.args[0]} />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Status\" value={CANDIDATE_STATUS[status]} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Min Self Stake\"\n            value={formatCelrValue(minSelfStake)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Staking Pool\"\n            value={formatCelrValue(stakingPool)}\n          />\n        </Col>\n        <Col span={24}>\n          <DelegatorTable delegators={delegators} />\n        </Col>\n      </Row>\n    );\n  };\n\n  render() {\n    const {\n      candidate,\n      candidateId,\n      isDelegateModalVisible,\n      isWithdrawModalVisible\n    } = this.state;\n\n    if (!candidate) {\n      return <Skeleton />;\n    }\n\n    return (\n      <Card title=\"Candidate\" extra={this.renderAction()}>\n        {this.renderCandidateDetail()}\n        <DelegateForm\n          candidate={candidateId}\n          visible={isDelegateModalVisible}\n          onClose={this.toggleDelegateModal}\n        />\n        <WithdrawForm\n          candidate={candidateId}\n          visible={isWithdrawModalVisible}\n          onClose={this.toggleWithdrawModal}\n        />\n      </Card>\n    );\n  }\n}\n\nCandidate.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nCandidate.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { contracts, Guard } = state;\n\n  return {\n    Guard: { ...Guard, ...contracts.Guard }\n  };\n}\n\nexport default drizzleConnect(Candidate, mapStateToProps);\n"],"sourceRoot":""}