{"version":3,"sources":["utils/dpos.js","components/dpos/candidate-table.js","routes/dpos.js"],"names":["CANDIDATE_STATUS","PARAM_NAMES","PROPOSAL_STATUS","Voting","Closed","VOTE_TYPE","Yes","No","Abstain","columns","title","dataIndex","width","defaultSortOrder","sorter","a","b","address","filters","_","map","text","index","value","toString","filterMultiple","onFilter","record","status","render","web3","utils","toBN","stakingPool","cmp","formatCelrValue","minSelfStake","CandidateTable","onRow","dispatch","props","onClick","routerRedux","push","pathname","dataSource","this","candidates","candidate","args","pagination","React","Component","drizzleConnect","state","DPoS","values","getCandidateInfo","contextTypes","drizzle","PropTypes","object","contracts"],"mappings":"4IAAA,wIAAO,IAAMA,EAAmB,CAAC,WAAY,SAAU,aAE1CC,EAAc,CACvB,kBACA,oBACA,eACA,kBACA,kBACA,iBACA,uBAGSC,EAAkB,CAAEC,OAAQ,IAAKC,OAAQ,KAEzCC,EAAY,CACrBC,IAAK,EACLC,GAAI,EACJC,QAAS,I,2MCNPC,EAAU,CACd,CACEC,MAAO,UACPC,UAAW,UACXC,MAAO,IACPC,iBAAkB,SAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,QAAUD,EAAEC,UAElC,CACEP,MAAO,SACPC,UAAW,SACXC,MAAO,IACPM,QAASC,IAAEC,IAAIpB,KAAkB,SAACqB,EAAMC,GAAP,MAAkB,CACjDD,OACAE,MAAOD,EAAME,eAEfC,gBAAgB,EAChBC,SAAU,SAACH,EAAOI,GAAR,OAAmBA,EAAOC,SAAWL,GAC/CT,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEa,OAASZ,EAAEY,QAC/BC,OAAQ,SAAAR,GAAI,OAAIrB,IAAiBqB,KAEnC,CACEX,MAAO,eACPC,UAAW,cACXG,OAAQ,SAACC,EAAGC,GACV,OAAOc,IAAKC,MAAMC,KAAKjB,EAAEkB,aAAaC,IAAIJ,IAAKC,MAAMC,KAAKhB,EAAEiB,eAE9DJ,OAAQ,SAAAR,GAAI,OAAIc,YAAgBd,KAElC,CACEX,MAAO,iBACPC,UAAW,eACXG,OAAQ,SAACC,EAAGC,GACV,OAAOc,IAAKC,MACTC,KAAKjB,EAAEqB,cACPF,IAAIJ,IAAKC,MAAMC,KAAKhB,EAAEoB,gBAE3BP,OAAQ,SAAAR,GAAI,OAAIc,YAAgBd,MAI9BgB,E,4MACJC,MAAQ,SAAAX,GAAW,IACTY,EAAa,EAAKC,MAAlBD,SAER,MAAO,CACLE,QAAS,WACPF,EACEG,cAAYC,KAAK,CACfC,SAAS,cAAD,OAAgBjB,EAAOV,e,uDAO/B,IAEF4B,EADiBC,KAAKN,MAApBO,WACsB3B,KAAI,SAAA4B,GAAS,kCACtCA,EAAUzB,OAD4B,IAEzCN,QAAS+B,EAAUC,KAAK,QAG1B,OACE,kBAAC,IAAD,CACEJ,WAAYA,EACZpC,QAASA,EACTyC,YAAY,EACZZ,MAAOQ,KAAKR,Y,GA3BSa,IAAMC,WA0CpBC,+BAAehB,GAJ9B,SAAyBiB,GACvB,MAAO,MCnFHC,E,uKACM,IACAA,EAAST,KAAKN,MAAde,KAER,OACE,kBAAC,IAAD,CAAM7C,MAAM,cACV,kBAAC,EAAD,CAAgBqC,WAAY5B,IAAEqC,OAAOD,EAAKE,yB,GAN/BN,IAAMC,WAYzBG,EAAKG,aAAe,CAClBC,QAASC,IAAUC,QAWNR,mCAAeE,GAR9B,SAAyBD,GAAQ,IACvBQ,EAAoBR,EAApBQ,UAAWP,EAASD,EAATC,KAEnB,MAAO,CACLA,KAAK,2BAAMA,GAASO,EAAUP","file":"static/js/7.9559a973.chunk.js","sourcesContent":["export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n\nexport const PARAM_NAMES = [\n    'ProposalDeposit',\n    'GovernVoteTimeout',\n    'SlashTimeout',\n    'MinValidatorNum',\n    'MaxValidatorNum',\n    'MinStakeInPool',\n    'AdvanceNoticePeriod'\n];\n\nexport const PROPOSAL_STATUS = { Voting: '1', Closed: '2' };\n\nexport const VOTE_TYPE = {\n    Yes: 1,\n    No: 2,\n    Abstain: 3\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { routerRedux } from 'dva/router';\nimport { Table } from 'antd';\nimport web3 from 'web3';\n\nimport { CANDIDATE_STATUS } from '../../utils/dpos';\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    width: 400,\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.address - b.address\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    width: 150,\n    filters: _.map(CANDIDATE_STATUS, (text, index) => ({\n      text,\n      value: index.toString()\n    })),\n    filterMultiple: false,\n    onFilter: (value, record) => record.status === value,\n    sorter: (a, b) => a.status - b.status,\n    render: text => CANDIDATE_STATUS[text]\n  },\n  {\n    title: 'Staking Pool',\n    dataIndex: 'stakingPool',\n    sorter: (a, b) => {\n      return web3.utils.toBN(a.stakingPool).cmp(web3.utils.toBN(b.stakingPool));\n    },\n    render: text => formatCelrValue(text)\n  },\n  {\n    title: 'Min Self Stake',\n    dataIndex: 'minSelfStake',\n    sorter: (a, b) => {\n      return web3.utils\n        .toBN(a.minSelfStake)\n        .cmp(web3.utils.toBN(b.minSelfStake));\n    },\n    render: text => formatCelrValue(text)\n  }\n];\n\nclass CandidateTable extends React.Component {\n  onRow = record => {\n    const { dispatch } = this.props;\n\n    return {\n      onClick: () => {\n        dispatch(\n          routerRedux.push({\n            pathname: `/candidate/${record.address}`\n          })\n        );\n      }\n    };\n  };\n\n  render() {\n    const { candidates } = this.props;\n    const dataSource = candidates.map(candidate => ({\n      ...candidate.value,\n      address: candidate.args[0]\n    }));\n\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n        onRow={this.onRow}\n      />\n    );\n  }\n}\n\nCandidateTable.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  candidates: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default drizzleConnect(CandidateTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Card } from 'antd';\n\nimport CandidateTable from '../components/dpos/candidate-table';\n\nclass DPoS extends React.Component {\n  render() {\n    const { DPoS } = this.props;\n\n    return (\n      <Card title=\"Validators\">\n        <CandidateTable candidates={_.values(DPoS.getCandidateInfo)} />\n      </Card>\n    );\n  }\n}\n\nDPoS.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { contracts, DPoS } = state;\n\n  return {\n    DPoS: { ...DPoS, ...contracts.DPoS }\n  };\n}\n\nexport default drizzleConnect(DPoS, mapStateToProps);\n"],"sourceRoot":""}