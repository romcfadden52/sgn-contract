{"version":3,"sources":["utils/guard.js","components/candidate/delegate-form.js","components/candidate/withdraw-form.js","components/candidate/delegator-table.js","components/candidate/punish-table.js","routes/candidate.js"],"names":["__webpack_require__","d","__webpack_exports__","CANDIDATE_STATUS","DelegateForm","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","_this$props","onClose","candidate","form","current","validateFields","err","values","value","contracts","Guard","methods","delegate","cacheSend","web3","utils","toWei","toString","React","createRef","drizzle","_this$props2","visible","formItems","name","field","fieldOptions","objectSpread","celrFieldOptions","placeholder","rules","message","required","react_default","a","createElement","modal","title","onOk","onCancel","components_form","ref","items","Component","contextTypes","PropTypes","object","WithdrawForm","intendWithdraw","columns","dataIndex","nestedColumns","DelegatorTable","expandedRowRender","record","dataSource","_","zip","intentAmounts","intentProposedTimes","map","_ref","_ref2","slicedToArray","intentAmount","intentProposedTime","formatCelrValue","table","pagination","delegators","filter","delegator","sort","delegator0","delegator1","args","delegatedStake","undelegatingStake","drizzleConnect","state","PunishTable","punishes","punish0","punish1","validator","punish","amount","console","log","Candidate","toggleDelegateModal","setState","prevState","isDelegateModalVisible","toggleWithdrawModal","isWithdrawModalVisible","confirmWithdraw","candidateId","renderAction","menu","es_menu","Item","onClick","dropdown","overlay","className","icon","type","renderCandidateDetail","_this$state","_candidate$value","minSelfStake","stakingPool","status","row","style","marginTop","col","span","statistic","tabs","TabPane","tab","key","delegator_table","punish_table","events","Delegate","fromBlock","match","params","id","event","_event$returnValues","returnValues","getDelegatorInfo","cacheCall","ConfirmWithdraw","IntendWithdraw","ValidatorChange","ethAddr","Punish","concat","toConsumableArray","_this$state2","card","extra","delegate_form","withdraw_form","skeleton","_props$Guard","candidates","getCandidateInfo","find"],"mappings":"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","file":"static/js/6.e7526afd.chunk.js","sourcesContent":["export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass DelegateForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose, candidate } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.Guard.methods.delegate.cacheSend(\n        candidate,\n        web3.utils.toWei(value.toString(), 'ether')\n      );\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR to delegate'\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true\n          }\n        ]\n      }\n    ];\n\n    return (\n      <Modal\n        title=\"Delegate Stake\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nDelegateForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nDelegateForm.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nexport default DelegateForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass WithdrawForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose, candidate } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.Guard.methods.intendWithdraw.cacheSend(\n        candidate,\n        web3.utils.toWei(value.toString(), 'ether')\n      );\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR to withdraw'\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true\n          }\n        ]\n      }\n    ];\n\n    return (\n      <Modal\n        title=\"Withdraw Stake\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nWithdrawForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nWithdrawForm.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nexport default WithdrawForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegator'\n  },\n  {\n    title: 'Delegated Stake',\n    dataIndex: 'delegatedStake'\n  },\n  {\n    title: 'Undelegating Stake',\n    dataIndex: 'undelegatingStake'\n  }\n];\n\nconst nestedColumns = [\n  {\n    title: 'Intent Amount',\n    dataIndex: 'intentAmount'\n  },\n  {\n    title: 'Intent Proposed Time',\n    dataIndex: 'intentProposedTime'\n  }\n];\n\nclass DelegatorTable extends React.Component {\n  expandedRowRender = record => {\n    const dataSource = _.zip(\n      record.intentAmounts,\n      record.intentProposedTimes\n    ).map(([intentAmount, intentProposedTime]) => ({\n      intentAmount: formatCelrValue(intentAmount),\n      intentProposedTime\n    }));\n\n    return (\n      <Table\n        columns={nestedColumns}\n        dataSource={dataSource}\n        pagination={false}\n      />\n    );\n  };\n\n  render() {\n    const { delegators } = this.props;\n    const dataSource = delegators\n      .filter(delegator => delegator.value)\n      .sort((delegator0, delegator1) => {\n        return delegator0.args[1] > delegator1.args[1];\n      })\n      .map(delegator => ({\n        ...delegator.value,\n        delegator: delegator.args[1],\n        delegatedStake: formatCelrValue(delegator.value.delegatedStake),\n        undelegatingStake: formatCelrValue(delegator.value.undelegatingStake)\n      }));\n\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n        expandedRowRender={this.expandedRowRender}\n      />\n    );\n  }\n}\n\nDelegatorTable.propTypes = {\n  delegators: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {}\n\nexport default drizzleConnect(DelegatorTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegator'\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount'\n  }\n];\n\nclass PunishTable extends React.Component {\n  render() {\n    const { punishes } = this.props;\n\n    const dataSource = punishes\n      .sort((punish0, punish1) => {\n        return punish0.validator > punish1.validator;\n      })\n      .map(punish => ({\n        ...punish,\n        amount: formatCelrValue(punish.amount)\n      }));\n\n    console.log(punishes);\n    return (\n      <Table dataSource={dataSource} columns={columns} pagination={false} />\n    );\n  }\n}\n\nPunishTable.propTypes = {\n  punishes: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {}\n\nexport default drizzleConnect(PunishTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport {\n  Card,\n  Skeleton,\n  Statistic,\n  Row,\n  Col,\n  Menu,\n  Dropdown,\n  Icon,\n  Tabs\n} from 'antd';\n\nimport DelegateForm from '../components/candidate/delegate-form';\nimport WithdrawForm from '../components/candidate/withdraw-form';\nimport DelegatorTable from '../components/candidate/delegator-table';\nimport PunishTable from '../components/candidate/punish-table';\nimport { formatCelrValue } from '../utils/unit';\nimport { CANDIDATE_STATUS } from '../utils/guard';\n\nclass Candidate extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      candidate: null,\n      punishes: [],\n      isDelegateModalVisible: false,\n      isWithdrawModalVisible: false\n    };\n\n    this.contracts.Guard.events.Delegate(\n      {\n        fromBlock: 0,\n        filter: { candidate: props.match.params.id }\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        const { delegator, candidate } = event.returnValues;\n\n        this.contracts.Guard.methods.getDelegatorInfo.cacheCall(\n          candidate,\n          delegator\n        );\n      }\n    );\n\n    this.contracts.Guard.events.ConfirmWithdraw(\n      {\n        fromBlock: 0,\n        filter: { candidate: props.match.params.id }\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        if (\n          event.returnValues.delegator ===\n          '0xac5ccEc1BD1d37791C8cbeE63e491FACf863BEE2'\n        ) {\n          console.log(event);\n        }\n      }\n    );\n\n    this.contracts.Guard.events.IntendWithdraw(\n      {\n        fromBlock: 0,\n        filter: { candidate: props.match.params.id }\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        if (\n          event.returnValues.delegator ===\n          '0xac5ccEc1BD1d37791C8cbeE63e491FACf863BEE2'\n        ) {\n          console.log(event);\n        }\n      }\n    );\n\n    this.contracts.Guard.events.ValidatorChange(\n      {\n        fromBlock: 0,\n        filter: { ethAddr: props.match.params.id }\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        console.log(event);\n      }\n    );\n\n    this.contracts.Guard.events.Punish(\n      {\n        fromBlock: 0,\n        filter: { validator: props.match.params.id }\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        this.setState({\n          punishes: [...this.state.punishes, event.returnValues]\n        });\n      }\n    );\n  }\n\n  static getDerivedStateFromProps(props) {\n    const { match, Guard = {} } = props;\n    const candidateId = match.params.id;\n    const candidates = _.values(Guard.getCandidateInfo);\n    const candidate = _.find(\n      candidates,\n      candidate => candidate.args[0] === candidateId\n    );\n    const delegators = _.values(Guard.getDelegatorInfo).filter(\n      delegator => delegator.args[0] === candidateId\n    );\n\n    return { candidate, candidateId, delegators };\n  }\n\n  toggleDelegateModal = () => {\n    this.setState(prevState => ({\n      isDelegateModalVisible: !prevState.isDelegateModalVisible\n    }));\n  };\n\n  toggleWithdrawModal = () => {\n    this.setState(prevState => ({\n      isWithdrawModalVisible: !prevState.isWithdrawModalVisible\n    }));\n  };\n\n  confirmWithdraw = () => {\n    const { candidateId } = this.state;\n\n    this.contracts.Guard.methods.confirmWithdraw.cacheSend(candidateId);\n  };\n\n  renderAction = () => {\n    const menu = (\n      <Menu>\n        <Menu.Item onClick={this.toggleDelegateModal}>Delegate</Menu.Item>\n        <Menu.Item onClick={this.toggleWithdrawModal}>\n          Initialize Withdraw\n        </Menu.Item>\n        <Menu.Item onClick={this.confirmWithdraw}>Confirm Withdraw</Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Dropdown overlay={menu}>\n        <a className=\"ant-dropdown-link\">\n          Actions <Icon type=\"down\" />\n        </a>\n      </Dropdown>\n    );\n  };\n\n  renderCandidateDetail = () => {\n    const { candidate, delegators, punishes } = this.state;\n    const { minSelfStake, stakingPool, status } = candidate.value;\n\n    return (\n      <Row style={{ marginTop: '10px' }}>\n        <Col span={12}>\n          <Statistic title=\"Address\" value={candidate.args[0]} />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Status\" value={CANDIDATE_STATUS[status]} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Min Self Stake\"\n            value={formatCelrValue(minSelfStake)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Staking Pool\"\n            value={formatCelrValue(stakingPool)}\n          />\n        </Col>\n        <Col span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"Delegators\" key=\"delegators\">\n              <DelegatorTable delegators={delegators} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Punishes\" key=\"punishes\">\n              <PunishTable punishes={punishes} />\n            </Tabs.TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n    );\n  };\n\n  render() {\n    const {\n      candidate,\n      candidateId,\n      isDelegateModalVisible,\n      isWithdrawModalVisible\n    } = this.state;\n\n    if (!candidate) {\n      return <Skeleton />;\n    }\n\n    return (\n      <Card title=\"Candidate\" extra={this.renderAction()}>\n        {this.renderCandidateDetail()}\n        <DelegateForm\n          candidate={candidateId}\n          visible={isDelegateModalVisible}\n          onClose={this.toggleDelegateModal}\n        />\n        <WithdrawForm\n          candidate={candidateId}\n          visible={isWithdrawModalVisible}\n          onClose={this.toggleWithdrawModal}\n        />\n      </Card>\n    );\n  }\n}\n\nCandidate.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nCandidate.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { contracts, Guard } = state;\n\n  return {\n    Guard: { ...Guard, ...contracts.Guard }\n  };\n}\n\nexport default drizzleConnect(Candidate, mapStateToProps);\n"],"sourceRoot":""}