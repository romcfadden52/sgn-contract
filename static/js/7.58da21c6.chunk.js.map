{"version":3,"sources":["utils/dpos.js","components/candidate/sidechain-form.js","components/candidate/delegate-form.js","components/candidate/withdraw-form.js","components/candidate/commission-form.js","components/candidate/delegator-table.js","components/candidate/sidechain-info.js","components/candidate/punish-table.js","routes/candidate.js"],"names":["CANDIDATE_STATUS","PARAM_NAMES","PROPOSAL_STATUS","Voting","Closed","VOTE_TYPE","Yes","No","Abstain","SidechainForm","props","context","handleUpdateSidechain","onClose","form","current","validateFields","err","values","console","log","sidechainAddr","startsWith","contracts","SGN","methods","updateSidechainAddr","cacheSend","state","React","createRef","drizzle","this","visible","title","onOk","onCancel","ref","items","name","label","fieldOptions","placeholder","rules","message","required","Component","contextTypes","PropTypes","object","DelegateForm","onSubmit","candidateId","value","DPoS","delegate","web3","utils","toWei","toString","formItems","field","celrFieldOptions","WithdrawForm","intendWithdraw","CommissionForm","handleIncreaseCommission","network","candidate","commissionRate","rateLockEndTime","RATE_BASE","_","toNumber","block","number","announceIncreaseCommissionRate","nonIncreaseCommissionRate","commissionRateField","rateLockEndTimeField","drizzleConnect","columns","dataIndex","nestedColumns","DelegatorTable","expandedRowRender","record","dataSource","zip","intentAmounts","intentProposedTimes","map","intentAmount","intentProposedTime","formatCelrValue","pagination","delegators","filter","delegator","sort","delegator0","delegator1","args","delegatedStake","undelegatingStake","render","text","SidechainInfo","setting","axios","get","gateway","then","res","setState","data","result","catch","error","warning","stakingPool","span","PunishTable","punishes","punish0","punish1","validator","punish","amount","Candidate","toggleSidechainModal","prevState","isSidechainModalVisible","toggleDelegateModal","isDelegateModalVisible","toggleWithdrawModal","isWithdrawModalVisible","toggleCommissionModal","isCommissionModalVisible","confirmWithdraw","confirmIncreaseCommissionRate","claimValidator","renderAction","accounts","isOwner","menu","Item","onClick","overlay","className","type","renderCandidateDetail","minSelfStake","status","find","sidechainAddrMap","style","marginTop","TabPane","tab","key","match","params","id","cacheCall","events","Delegate","fromBlock","event","returnValues","getDelegatorInfo","Punish","extra","candidates","getCandidateInfo"],"mappings":"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","file":"static/js/7.58da21c6.chunk.js","sourcesContent":["export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n\nexport const PARAM_NAMES = [\n  'ProposalDeposit',\n  'GovernVoteTimeout',\n  'BlameTimeout',\n  'MinValidatorNum',\n  'MaxValidatorNum',\n  'MinStakeInPool',\n  'IncreaseRateWaitTime',\n];\n\nexport const PROPOSAL_STATUS = { Voting: '1', Closed: '2' };\n\nexport const VOTE_TYPE = {\n  Yes: 1,\n  No: 2,\n  Abstain: 3,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\n\nclass SidechainForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = {};\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  handleUpdateSidechain = () => {\n    const { onClose } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      let { sidechainAddr } = values;\n      if (!sidechainAddr.startsWith('0x')) {\n        sidechainAddr = '0x' + sidechainAddr;\n      }\n\n      this.contracts.SGN.methods.updateSidechainAddr.cacheSend(sidechainAddr);\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n\n    const formItems = [\n      {\n        name: 'sidechainAddr',\n        label: 'Sidechain Address',\n        fieldOptions: {\n          placeholder: 'The account address on sgn',\n        },\n        rules: [\n          {\n            message: 'Please enter a sidechainAddr!',\n            required: true,\n          },\n        ],\n      },\n    ];\n\n    return (\n      <Modal\n        title=\"Update Sidechain\"\n        visible={visible}\n        onOk={this.handleUpdateSidechain}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nSidechainForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nSidechainForm.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nexport default SidechainForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass DelegateForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose, candidateId } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.DPoS.methods.delegate.cacheSend(\n        candidateId,\n        web3.utils.toWei(value.toString(), 'ether')\n      );\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR to delegate',\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true,\n          },\n        ],\n      },\n    ];\n\n    return (\n      <Modal\n        title=\"Delegate Stake\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nDelegateForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nDelegateForm.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nexport default DelegateForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass WithdrawForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose, candidateId } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.DPoS.methods.intendWithdraw.cacheSend(\n        candidateId,\n        web3.utils.toWei(value.toString(), 'ether')\n      );\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR to withdraw',\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true,\n          },\n        ],\n      },\n    ];\n\n    return (\n      <Modal\n        title=\"Withdraw Stake\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nWithdrawForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nWithdrawForm.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nexport default WithdrawForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Modal } from 'antd';\nimport { drizzleConnect } from 'drizzle-react';\n\nimport Form from '../form';\nimport { commissionRateField, rateLockEndTimeField } from '../../utils/form';\nimport { RATE_BASE } from '../../utils/constant';\n\nclass CommissionForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = {};\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  handleIncreaseCommission = () => {\n    const { onClose, network, candidate } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      let { commissionRate, rateLockEndTime } = values;\n      commissionRate = commissionRate * RATE_BASE;\n      rateLockEndTime = _.toNumber(rateLockEndTime) + network.block.number;\n\n      if (commissionRate > candidate.value.commissionRate) {\n        this.contracts.DPoS.methods.announceIncreaseCommissionRate.cacheSend(\n          commissionRate,\n          rateLockEndTime\n        );\n      } else {\n        this.contracts.DPoS.methods.nonIncreaseCommissionRate.cacheSend(\n          commissionRate,\n          rateLockEndTime\n        );\n      }\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n\n    const formItems = [commissionRateField, rateLockEndTimeField];\n\n    return (\n      <Modal\n        title=\"Increase Commission Rate\"\n        visible={visible}\n        onOk={this.handleIncreaseCommission}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nCommissionForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nCommissionForm.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n  const { network } = state;\n\n  return {\n    network,\n  };\n}\n\nexport default drizzleConnect(CommissionForm, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegator',\n  },\n  {\n    title: 'Delegated Stake',\n    dataIndex: 'delegatedStake',\n  },\n  {\n    title: 'Undelegating Stake',\n    dataIndex: 'undelegatingStake',\n  },\n];\n\nconst nestedColumns = [\n  {\n    title: 'Intent Withdraw Amount',\n    dataIndex: 'intentAmount',\n  },\n  {\n    title: 'Intent Withdraw Block Height',\n    dataIndex: 'intentProposedTime',\n  },\n];\n\nclass DelegatorTable extends React.Component {\n  expandedRowRender = (record) => {\n    const dataSource = _.zip(\n      record.intentAmounts,\n      record.intentProposedTimes\n    ).map(([intentAmount, intentProposedTime]) => ({\n      intentAmount: formatCelrValue(intentAmount),\n      intentProposedTime,\n    }));\n\n    return (\n      <Table\n        columns={nestedColumns}\n        dataSource={dataSource}\n        pagination={false}\n      />\n    );\n  };\n\n  render() {\n    const { delegators } = this.props;\n    const dataSource = delegators\n      .filter((delegator) => delegator.value)\n      .sort((delegator0, delegator1) => {\n        return delegator0.args[1] > delegator1.args[1];\n      })\n      .map((delegator) => ({\n        ...delegator.value,\n        delegator: delegator.args[1],\n        delegatedStake: formatCelrValue(delegator.value.delegatedStake),\n        undelegatingStake: formatCelrValue(delegator.value.undelegatingStake),\n      }));\n\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n        expandedRowRender={this.expandedRowRender}\n      />\n    );\n  }\n}\n\nDelegatorTable.propTypes = {\n  delegators: PropTypes.array.isRequired,\n};\n\nfunction mapStateToProps(state) {}\n\nexport default drizzleConnect(DelegatorTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Statistic, Row, Col, message, Table } from 'antd';\nimport axios from 'axios';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegatorAddr',\n  },\n  {\n    title: 'Delegated Stake',\n    dataIndex: 'delegatedStake',\n    render: (text) => {\n      return formatCelrValue(text);\n    },\n  },\n];\n\nclass SidechainInfo extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    const {\n      candidateId,\n      network: { setting },\n    } = props;\n    console.log(props.network.setting);\n    this.state = {};\n\n    axios\n      .get(`${setting.gateway}/validator/candidate/${candidateId}`)\n      .then((res) => {\n        this.setState({\n          ...res.data.result,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        message.warning(\n          'Please config gateway url in setting to load sidechain info correctly'\n        );\n      });\n  }\n\n  render() {\n    const { commissionRate, stakingPool, delegators } = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Commission Rate\"\n            value={`${commissionRate * 100} %`}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Staking Pool\"\n            value={formatCelrValue(stakingPool)}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Table dataSource={delegators} columns={columns} pagination={false} />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nSidechainInfo.propTypes = {};\n\nSidechainInfo.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n  const { network } = state;\n\n  return {\n    network,\n  };\n}\n\nexport default drizzleConnect(SidechainInfo, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegator',\n  },\n  {\n    title: 'Amount',\n    dataIndex: 'amount',\n  },\n];\n\nclass PunishTable extends React.Component {\n  render() {\n    const { punishes } = this.props;\n\n    const dataSource = punishes\n      .sort((punish0, punish1) => {\n        return punish0.validator > punish1.validator;\n      })\n      .map((punish) => ({\n        ...punish,\n        amount: formatCelrValue(punish.amount),\n      }));\n\n    console.log(punishes);\n    return (\n      <Table dataSource={dataSource} columns={columns} pagination={false} />\n    );\n  }\n}\n\nPunishTable.propTypes = {\n  punishes: PropTypes.array.isRequired,\n};\n\nfunction mapStateToProps(state) {}\n\nexport default drizzleConnect(PunishTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport {\n  Card,\n  Skeleton,\n  Statistic,\n  Row,\n  Col,\n  Menu,\n  Dropdown,\n  Icon,\n  Tabs,\n} from 'antd';\n\nimport SidechainForm from '../components/candidate/sidechain-form';\nimport DelegateForm from '../components/candidate/delegate-form';\nimport WithdrawForm from '../components/candidate/withdraw-form';\nimport CommissionForm from '../components/candidate/commission-form';\nimport DelegatorTable from '../components/candidate/delegator-table';\nimport SidechainInfo from '../components/candidate/sidechain-info';\nimport PunishTable from '../components/candidate/punish-table';\nimport { formatCelrValue } from '../utils/unit';\nimport { CANDIDATE_STATUS } from '../utils/dpos';\nimport { RATE_BASE } from '../utils/constant';\n\nclass Candidate extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      candidate: null,\n      punishes: [],\n      isSidechainModalVisible: false,\n      isDelegateModalVisible: false,\n      isWithdrawModalVisible: false,\n      isCommissionModalVisible: false,\n    };\n\n    const candidateId = props.match.params.id;\n    this.contracts.SGN.methods.sidechainAddrMap.cacheCall(candidateId);\n\n    this.contracts.DPoS.events.Delegate(\n      {\n        fromBlock: 0,\n        filter: { candidate: candidateId },\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        const { delegator, candidate } = event.returnValues;\n\n        this.contracts.DPoS.methods.getDelegatorInfo.cacheCall(\n          candidate,\n          delegator\n        );\n      }\n    );\n\n    this.contracts.DPoS.events.Punish(\n      {\n        fromBlock: 0,\n        filter: { validator: candidateId },\n      },\n      (err, event) => {\n        if (err) {\n          return;\n        }\n\n        this.setState({\n          punishes: [...this.state.punishes, event.returnValues],\n        });\n      }\n    );\n  }\n\n  static getDerivedStateFromProps(props) {\n    const { match, DPoS = {} } = props;\n    const candidateId = match.params.id;\n    const candidates = _.values(DPoS.getCandidateInfo);\n    const candidate = _.find(\n      candidates,\n      (candidate) => candidate.args[0] === candidateId\n    );\n    const delegators = _.values(DPoS.getDelegatorInfo).filter(\n      (delegator) => delegator.args[0] === candidateId\n    );\n\n    return { candidate, candidateId, delegators };\n  }\n\n  toggleSidechainModal = () => {\n    this.setState((prevState) => ({\n      isSidechainModalVisible: !prevState.isSidechainModalVisible,\n    }));\n  };\n\n  toggleDelegateModal = () => {\n    this.setState((prevState) => ({\n      isDelegateModalVisible: !prevState.isDelegateModalVisible,\n    }));\n  };\n\n  toggleWithdrawModal = () => {\n    this.setState((prevState) => ({\n      isWithdrawModalVisible: !prevState.isWithdrawModalVisible,\n    }));\n  };\n\n  toggleCommissionModal = () => {\n    this.setState((prevState) => ({\n      isCommissionModalVisible: !prevState.isCommissionModalVisible,\n    }));\n  };\n\n  confirmWithdraw = () => {\n    const { candidateId } = this.state;\n\n    this.contracts.DPoS.methods.confirmWithdraw.cacheSend(candidateId);\n  };\n\n  confirmIncreaseCommissionRate = () => {\n    this.contracts.DPoS.methods.confirmIncreaseCommissionRate.cacheSend();\n  };\n\n  claimValidator = () => {\n    this.contracts.DPoS.methods.claimValidator.cacheSend();\n  };\n\n  renderAction = () => {\n    const { accounts } = this.props;\n    const { candidate } = this.state;\n    const isOwner = accounts[0] === candidate.args[0];\n\n    const menu = (\n      <Menu>\n        <Menu.Item onClick={this.toggleSidechainModal}>\n          Update Sidechain\n        </Menu.Item>\n        <Menu.Item onClick={this.toggleDelegateModal}>Delegate</Menu.Item>\n        <Menu.Item onClick={this.toggleWithdrawModal}>\n          Initialize Withdraw\n        </Menu.Item>\n        <Menu.Item onClick={this.confirmWithdraw}>Confirm Withdraw</Menu.Item>\n        {isOwner && (\n          <Menu.Item onClick={this.toggleCommissionModal}>\n            Announce Increase Commission Rate\n          </Menu.Item>\n        )}\n        {isOwner && (\n          <Menu.Item onClick={this.confirmIncreaseCommissionRate}>\n            Confirm Increase Commission Rate\n          </Menu.Item>\n        )}\n        {isOwner && (\n          <Menu.Item onClick={this.claimValidator}>Claim Validator</Menu.Item>\n        )}\n      </Menu>\n    );\n\n    return (\n      <Dropdown overlay={menu}>\n        <a className=\"ant-dropdown-link\">\n          Actions <Icon type=\"down\" />\n        </a>\n      </Dropdown>\n    );\n  };\n\n  renderCandidateDetail = () => {\n    const { SGN } = this.props;\n    const { candidate, delegators, punishes } = this.state;\n    const candidateId = candidate.args[0];\n    const {\n      minSelfStake,\n      stakingPool,\n      status,\n      commissionRate,\n      rateLockEndTime,\n    } = candidate.value;\n    const sidechainAddr = _.find(\n      SGN.sidechainAddrMap,\n      (data) => data.args[0] === candidateId\n    );\n\n    return (\n      <Row style={{ marginTop: '10px' }}>\n        <Col span={12}>\n          <Statistic title=\"Address\" value={candidateId} />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Status\" value={CANDIDATE_STATUS[status]} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Min Self Stake\"\n            value={formatCelrValue(minSelfStake)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Staking Pool\"\n            value={formatCelrValue(stakingPool)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Commission Rate\"\n            value={`${commissionRate / RATE_BASE} %`}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Rate Lock End Time\"\n            value={`${rateLockEndTime} block height`}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Sidechain Address\"\n            value={_.get(sidechainAddr, 'value')}\n          />\n        </Col>\n        <Col span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"Delegators\" key=\"delegators\">\n              <DelegatorTable delegators={delegators} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Sidechain\" key=\"sidechain\">\n              <SidechainInfo candidateId={candidateId} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Punishes\" key=\"punishes\">\n              <PunishTable punishes={punishes} />\n            </Tabs.TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n    );\n  };\n\n  render() {\n    const {\n      candidate,\n      candidateId,\n      isSidechainModalVisible,\n      isDelegateModalVisible,\n      isWithdrawModalVisible,\n      isCommissionModalVisible,\n    } = this.state;\n\n    if (!candidate) {\n      return <Skeleton />;\n    }\n\n    return (\n      <Card title=\"Candidate\" extra={this.renderAction()}>\n        {this.renderCandidateDetail()}\n        <SidechainForm\n          visible={isSidechainModalVisible}\n          onClose={this.toggleSidechainModal}\n        />\n        <DelegateForm\n          candidateId={candidateId}\n          visible={isDelegateModalVisible}\n          onClose={this.toggleDelegateModal}\n        />\n        <WithdrawForm\n          candidateId={candidateId}\n          visible={isWithdrawModalVisible}\n          onClose={this.toggleWithdrawModal}\n        />\n        <CommissionForm\n          candidate={candidate}\n          visible={isCommissionModalVisible}\n          onClose={this.toggleCommissionModal}\n        />\n      </Card>\n    );\n  }\n}\n\nCandidate.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nCandidate.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n  const { accounts, contracts, DPoS, SGN } = state;\n  return {\n    accounts,\n    DPoS: { ...DPoS, ...contracts.DPoS },\n    SGN: { ...SGN, ...contracts.SGN },\n  };\n}\n\nexport default drizzleConnect(Candidate, mapStateToProps);\n"],"sourceRoot":""}