{"version":3,"sources":["utils/network.js","utils/contracts.js","utils/unit.js","utils/form.js","components/select.js","components/form.js","components/approve-celr.js","components/account-info.js","utils/subscribe.js","App.js","router.js","models/guard.js","models/network.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","getNetworkConfig","checkNetworkCompatbility","antd__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","n","networkConfigs","localNetworkConfig","sgnGateway","networkID","networkConfig","axiosInstance","axios","create","baseURL","timeout","networkVersion","window","web3","currentProvider","Modal","error","title","content","_contracts_Guard_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_CELRToken_json__WEBPACK_IMPORTED_MODULE_1__","contractOptions","block","fallback","type","url","contracts","Guard","CELRToken","polls","accounts","blocks","formatCelrValue","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","web3__WEBPACK_IMPORTED_MODULE_1__","web3__WEBPACK_IMPORTED_MODULE_1___default","value","unit","_","toNumber","concat","utils","fromWei","formatCurrencyValue","celrFieldOptions","minValueRule","formatter","parser","replace","minValue","validator","rule","callback","Option","Select","defaultProps","allowClear","disabled","optionFilterProp","placeholder","state","undefined","onChange","_this","setState","getValue","defaultValue","props","renderOptions","options","map","_ref","_ref2","Object","slicedToArray","text","react_default","a","createElement","key","this","objectSpread","omit","isNil","es_select","assign","showSearch","React","Component","FormItem","Form","Item","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","number","InputNumber","TextArea","select","CustomizeForm","handleSubmit","e","_this$props","form","onSubmit","preventDefault","validateFields","err","values","renderFormItems","_this$props2","formItemLayout","items","getFieldDecorator","item","_item$field","field","fieldOptions","initialValue","label","name","rules","Field","decoratorOptions","getValueFromEvent","_len2","arguments","length","args","Array","_key2","fileList","target","checked","capitalize","_this$props3","submitText","es_form","noop","es_button","htmlType","labelCol","onValuesChange","changedValues","ApproveCelrForm","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClose","current","methods","approve","address","toWei","toString","send","createRef","drizzle","visible","formItems","message","required","modal","onOk","onCancel","components_form","ref","contextTypes","PropTypes","object","AccountInfo","celrValue","card","className","statistic","getCelrAllowance","account","allowance","cacheCall","Sider","Layout","Content","Footer","App","toggleModal","prevState","isModalVisible","dispatch","events","InitializeCandidate","fromBlock","event","console","log","candidate","returnValues","getCandidateInfo","Approval","filter","owner","spender","subscribeEvent","blockNumber","selectedAddress","setInterval","location","reload","eth","getBlock","then","payload","subscribeChainInfo","children","pathname","celerAllowance","react","layout","account_info","menu","theme","mode","selectedKeys","slice","router","to","onClick","approve_celr","style","textAlign","withRouter","drizzleConnect","ConnectedRouter","routerRedux","LoadingWrapper","LoadingContainer","redirectToHome","RouterConfig","history","app","Dynamic","component","Promise","all","bind","Candidate","Reward","drizzle_react","store","_store","loadingComp","Spin","src_App_0","exact","path","render","guard","namespace","effects","reducers","save","action","models_network","rootSaga","regenerator_default","wrap","_context","prev","next","drizzleSagas","saga","fork","stop","_marked","dva","initialState","generateContractsInitialState","extraReducers","drizzleReducers","onError","resp","msg","srv","use","createLoading","model","GuardModel","NetworkModel","require","default","start","runSaga"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAMMG,EAAiB,GAEjBC,EAAqB,CACzBC,WAAY,yBAGDR,EAAmB,SAAAS,GAC9B,IAAIC,EAAgBH,EAUpB,OATID,EAAeG,KACjBC,EAAgBJ,EAAeG,IAGjCC,EAAcC,cAAgBC,IAAMC,OAAO,CACzCC,QAASJ,EAAcF,WACvBO,QAAS,MAGJL,GAGIT,EAA2B,WAKtC,IAAMe,EAAiBC,OAAOC,KAAKC,gBAAgBH,eA5BrC,MA6BVA,GA5BU,MA4BoBA,GAChCI,IAAMC,MAAM,CACVC,MAAO,mCACPC,QAAS,2ECnCf,IAAAC,EAAA3B,EAAA,KAAA4B,EAAA5B,EAAA,KAIM6B,EAAkB,CACtBR,KAAM,CACJS,OAAO,EACPC,SAAU,CACRC,KAAM,KACNC,IAAK,wBAGTC,UAAW,CAACC,EAAOC,GACnBC,MAAO,CACLC,SAAU,IACVC,OAAQ,MAIGV,wCCnBf7B,EAAAC,EAAAC,EAAA,sBAAAsC,IAAA,IAAAC,EAAAzC,EAAA,IAAA0C,EAAA1C,EAAAQ,EAAAiC,GAAAE,EAAA3C,EAAA,KAAA4C,EAAA5C,EAAAQ,EAAAmC,GAiCaH,GAjCbxC,EAAA,KAiC+B,SAAA6C,GAC7B,OAfiC,SAACA,EAAOC,GACzC,GAAKD,EAML,OAFYE,IAAEC,SAASH,GAEb,IACR,GAAAI,OAAUJ,EAAV,QAGF,GAAAI,OAAU5B,IAAK6B,MAAMC,QAAQN,GAA7B,KAAAI,OAAuCH,GAIhCM,CAAoBP,EA7BT,4CCLpB7C,EAAAC,EAAAC,EAAA,sBAAAmD,IAAArD,EAAAC,EAAAC,EAAA,sBAAAoD,IAAO,IAA6BR,EAKvBO,GALuBP,EAKiB,OALR,CAC3CS,UAAW,SAAAV,GAAK,OAAKA,EAAK,GAAAI,OAAMJ,GAANI,OAAcH,GAAS,IACjDU,OAAQ,SAAAX,GAAK,OAAIA,EAAMY,QAAQ,SAAU,OAoB9BH,EAAe,SAAAI,GAAQ,MAAK,CACvCC,UAAW,SAACC,EAAMf,EAAOgB,GACnBhB,EAAQa,GAEVG,EADS,yBAAAZ,OAA4BS,IAIvCG,4LCzBEC,EAASC,IAAOD,oNAGpBE,aAAe,CACbC,YAAY,EACZC,UAAU,EACVC,iBAAkB,WAClBC,YAAa,MAGfC,MAAQ,CAAExB,WAAOyB,KAEjBC,SAAW,SAAC1B,GAAD,OAAsB2B,EAAKC,SAAS,CAAE5B,aAEjD6B,SAAW,WAAM,IACPC,EAAiBH,EAAKI,MAAtBD,aAER,OADkBH,EAAKH,MAAfxB,OACQ8B,KAGlBE,cAAgB,WAAM,IACZC,EAAYN,EAAKI,MAAjBE,QACR,OAAO/B,IAAEgC,IAAID,EAAS,SAAAE,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEnC,EAAFoC,EAAA,GAASG,EAATH,EAAA,UACpBI,EAAAC,EAAAC,cAACzB,EAAD,CAAQ0B,IAAK3C,EAAOA,MAAOA,GACxBuC,8EAKE,IACCT,EAAiBc,KAAKb,MAAtBD,aACFC,EAAKM,OAAAQ,EAAA,EAAAR,CAAA,GACNnC,IAAE4C,KAAKF,KAAKb,MAAO,CAAC,UAAW,kBAUpC,OAPKA,EAAML,WACTK,EAAML,SAAWkB,KAAKlB,UAEnBxB,IAAE6C,MAAMjB,KACXC,EAAMD,aAAeA,GAIrBU,EAAAC,EAAAC,cAACM,EAAA,EAADX,OAAAY,OAAA,GAAYlB,EAAZ,CAAmBmB,YAAY,IAC5BN,KAAKZ,wBA1CemB,IAAMC,WCA7BC,EAAWC,IAAKC,KAchBC,EAAe,CACnBC,WAAY,CACVC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACvBC,GAAI,CAAEF,KAAM,MAIVG,EAAY,CAChBC,KAAMC,IACNC,MAAOC,IACPC,OAAQC,IACR7B,KAAM2B,IAAMG,SACZC,OAAQpD,GAGJqD,6MACJC,aAAe,SAAAC,GAAK,IAAAC,EACS/C,EAAKI,MAAxB4C,EADUD,EACVC,KAAMC,EADIF,EACJE,SACdH,EAAEI,iBACFF,EAAKG,eAAe,SAACC,EAAKC,GACnBD,GACHH,EAASI,QAKfC,gBAAkB,WAAM,IAAAC,EACkBvD,EAAKI,MAArC4C,EADcO,EACdP,KAAMQ,EADQD,EACRC,eAAgBC,EADRF,EACQE,MACtBC,EAAsBV,EAAtBU,kBAER,OAAOnF,IAAEgC,IAAIkD,EAAO,SAAAE,GAAQ,IAAAC,EAQtBD,EANFE,aAFwB,IAAAD,EAEhB,QAFgBA,EAGxBE,EAKEH,EALFG,aACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,KACAC,EACEP,EADFO,MAEIC,EAAQhC,EAAU0B,GAClBO,EAAmB,CACvBL,eACAG,QACAG,kBAHuB,WAGI,QAAAC,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GACzB,GAAc,SAAVd,EACF,OAAOY,EAAK,GAAGG,SAFQ,IAKlB9B,EAAK2B,EALa,GAMzB,IAAK3B,IAAMA,EAAE+B,OACX,OAAO/B,EAPgB,IAUjB+B,EAAW/B,EAAX+B,OACR,MAAuB,aAAhBA,EAAOrH,KAAsBqH,EAAOC,QAAUD,EAAOxG,QAIhE,OACEwC,EAAAC,EAAAC,cAACW,EAADhB,OAAAY,OAAA,CACEN,IAAKiD,GACDT,EAFN,CAGEQ,MAAQA,GAAQzF,IAAEwG,WAAWd,KAE5BP,EACCO,EACAG,EAFDV,CAGC7C,EAAAC,EAAAC,cAACoD,EAAUL,gFAMZ,IAAAkB,EAC0B/D,KAAKb,MAA9B6C,EADD+B,EACC/B,SAAUgC,EADXD,EACWC,WAClB,OACEpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAMjC,SAAUhC,KAAK4B,cAClB5B,KAAKqC,kBACLL,IAAa1E,IAAE4G,MACdtE,EAAAC,EAAAC,cAACW,EAAaG,EACZhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQC,SAAS,SAAS7H,KAAK,WAC5ByH,YAlEazD,IAAMC,WA2ElCmB,EAAcpD,aAAe,CAC3BgE,eAvG4B,CAC5B8B,SAAU,CACRvD,GAAI,CAAEC,KAAM,GACZE,GAAI,CAAEF,KAAM,KAGdF,WAAY,CACVC,GAAI,CAAEC,KAAM,IACZE,GAAI,CAAEF,KAAM,MAgGdiB,SAAU1E,IAAE4G,KACZF,WAAY,QAGCtD,QAAKnF,OAAO,CACzB+I,eADyB,SACVnF,EAAOoF,GAChBpF,EAAMmF,gBACRnF,EAAMmF,eAAeC,KAHZ7D,CAMZiB,w9o+BClHG6C,cACJ,SAAAA,EAAYrF,EAAOsF,GAAS,IAAA1F,EAAA,OAAAU,OAAAiF,EAAA,EAAAjF,CAAAO,KAAAwE,IAC1BzF,EAAAU,OAAAkF,EAAA,EAAAlF,CAAAO,KAAAP,OAAAmF,EAAA,EAAAnF,CAAA+E,GAAAK,KAAA7E,KAAMb,KAMR6C,SAAW,WAAM,IACP8C,EAAY/F,EAAKI,MAAjB2F,QAER/F,EAAKgD,KAAKgD,QAAQ7C,eAAe,SAACC,EAAKC,GACrC,IAAID,EAAJ,CADgD,IAKxC/E,EAAUgF,EAAVhF,MAER2B,EAAKtC,UAAUE,UAAUqI,QACtBC,QACClG,EAAKtC,UAAUC,MAAMwI,QACrBtJ,IAAK6B,MAAM0H,MAAM/H,EAAMgI,WAAY,UAEpCC,OAEHP,QArBF/F,EAAKgD,KAAOxB,IAAM+E,YAClBvG,EAAKtC,UAAYgI,EAAQc,QAAQ9I,UAJPsC,wEA4BnB,IAAA+C,EACsB9B,KAAKb,MAA1BqG,EADD1D,EACC0D,QAASV,EADVhD,EACUgD,QACXW,EAAY,CAChB,CACEzC,KAAM,QACNJ,MAAO,SACPC,aAAapD,OAAAQ,EAAA,EAAAR,CAAA,GACR7B,IADO,CAEVe,YAAa,2CAEfsE,MAAO,CACL,CACEyC,QAAS,wBACTC,UAAU,MAMlB,OACE/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACE5J,MAAM,wBACNwJ,QAASA,EACTK,KAAM7F,KAAKgC,SACX8D,SAAUhB,GAEVlF,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMC,IAAKhG,KAAK+B,KAAMS,MAAOiD,YAvDPlF,IAAMC,WAkEpCgE,EAAgByB,aAAe,CAC7BV,QAASW,IAAUC,QAGN3B,mCC5DA4B,MAbf,SAAqBjH,GAAO,IAClBkH,EAAclH,EAAdkH,UAER,OACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMC,UAAU,eAAevK,MAAM,gBACnC4D,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACExK,MAAM,2BACNoB,MAAOL,YAAgBsJ,OCgDzBI,EAAmB,SAACC,EAASjK,GAAc,IACvCE,EAAqBF,EAArBE,UAAWD,EAAUD,EAAVC,MACnBC,EAAUqI,QAAQ2B,UAAUC,UAAUF,EAAShK,EAAMwI,mBC/C/C2B,UAA2BC,IAA3BD,OAAOE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAElBC,cACJ,SAAAA,EAAY9H,EAAOsF,GAAS,IAAA1F,EAAA,OAAAU,OAAAiF,EAAA,EAAAjF,CAAAO,KAAAiH,IAC1BlI,EAAAU,OAAAkF,EAAA,EAAAlF,CAAAO,KAAAP,OAAAmF,EAAA,EAAAnF,CAAAwH,GAAApC,KAAA7E,KAAMb,KAkBR+H,YAAc,WACZnI,EAAKC,SAAS,SAAAmI,GAAS,MAAK,CAC1BC,gBAAiBD,EAAUC,mBAlB7BrI,EAAKH,MAAQ,CAAEwI,gBAAgB,GAC/BrI,EAAKtC,UAAYgI,EAAQc,QAAQ9I,UACjCsC,EAAKnD,KAAO6I,EAAQc,QAAQ3J,KALFmD,oFAQP,IAAA+C,EACY9B,KAAKb,MAA5BtC,EADWiF,EACXjF,SAAUwK,EADCvF,EACDuF,UDzBQ,SAACX,EAASjK,GAAc,IAC5CC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UAEfD,EAAM4K,OAAOC,oBACX,CACEC,UAAW,GAEb,SAACrF,EAAKsF,GACJ,GAAItF,EACFuF,QAAQC,IAAIxF,OADd,CADc,IAMNyF,EAAcH,EAAMI,aAApBD,UACRlL,EAAMsI,QAAQ8C,iBAAiBlB,UAAUgB,MAI7CjL,EAAU2K,OAAOS,SACf,CACEC,OAAQ,CACNC,MAAOvB,EACPwB,QAASxL,EAAMwI,UAGnB,SAAC/C,EAAKsF,GACAtF,GAIJsE,EAAiBC,EAASjK,KAI9BgK,EAAiBC,EAASjK,GCRxB0L,CAAetL,EAAS,GAAImD,KAAKvD,WDWH,SAACb,EAAMyL,GACvC,IACIe,EADE1B,EAAU9K,EAAKC,gBAAgBwM,gBAGrCC,YAAY,WAKV,OAJI5B,IAAY9K,EAAKC,gBAAgBwM,iBACnC1M,OAAO4M,SAASC,SAGX5M,EAAK6M,IAAIC,SAAS,UAAUC,KAAK,SAAAtM,GAClCA,GAAS+L,IAAgB/L,EAAMkF,SACjC8F,EAAS,CACP9K,KAAM,eACNqM,QAAS,CAAEvM,WAEb+L,EAAc/L,EAAMkF,WAtDN,KC6BlBsH,CAAmB7I,KAAKpE,KAAMyL,GAE9BA,EAAS,CACP9K,KAAM,eACNqM,QAASlO,YAAiBsF,KAAKpE,KAAKC,gBAAgBH,mDAU/C,IACC0L,EAAmBpH,KAAKpB,MAAxBwI,eADD9E,EAEmCtC,KAAKb,MAAvC2J,EAFDxG,EAECwG,SAAUP,EAFXjG,EAEWiG,SAAU5L,EAFrB2F,EAEqB3F,UACpBoM,EAAaR,EAAbQ,SACFC,EAAiB1L,IAAE8E,OAAOzF,EAAUgK,WAAW,IAAM,GAE3D,OACEsC,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACpC,EAAD,KACEoC,EAAA,cAACE,EAAD,CAAa9C,UAAW2C,EAAe5L,QACvC6L,EAAA,cAACG,EAAA,EAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,aAAc,CAACR,EAASS,MAAM,KAC7DP,EAAA,cAACG,EAAA,EAAKzI,KAAN,CAAWZ,IAAI,SACbkJ,EAAA,cAACQ,EAAA,KAAD,CAAMC,GAAG,UAAT,UAEFT,EAAA,cAACG,EAAA,EAAKzI,KAAN,CAAWZ,IAAI,UACbkJ,EAAA,cAACQ,EAAA,KAAD,CAAMC,GAAG,WAAT,WAEFT,EAAA,cAACG,EAAA,EAAKzI,KAAN,CAAW4F,UAAU,gBACnB0C,EAAA,cAAC9E,EAAA,EAAD,CAAQ5H,KAAK,UAAUF,OAAK,EAACsN,QAAS3J,KAAKkH,aAA3C,mBAMN+B,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAAClC,EAAD,KACG+B,EACDG,EAAA,cAACW,EAAD,CACEpE,QAAS4B,EACTtC,QAAS9E,KAAKkH,eAGlB+B,EAAA,cAACjC,EAAD,CAAQ6C,MAAO,CAAEC,UAAW,WAA5B,kDA1DQvJ,aAwElB0G,EAAIhB,aAAe,CACjBV,QAASW,IAAUC,QAaN4D,2BAAWC,yBAAe/C,EAVzC,SAAyBrI,GAAO,IACtB/B,EAAwB+B,EAAxB/B,SAAUJ,EAAcmC,EAAdnC,UAGlB,OADAiL,QAAQC,IAAIlL,GACL,CACLI,WACAF,UAAWF,EAAUE,uBCxFjBsN,EAAoBC,cAApBD,gBACFE,EAAiBJ,qBAAWK,oBAE5BC,EAAiB,kBAAMzK,EAAAC,EAAAC,cAAC2J,EAAA,SAAD,CAAUC,GAAG,YAsC3BY,UApCf,SAAA/K,GAAwC,IAAhBgL,EAAgBhL,EAAhBgL,QAASC,EAAOjL,EAAPiL,IACzB9N,EAAQ+N,IAAQ,CACpBD,MACAE,UAAW,kBAAMC,QAAAC,IAAA,CAAArQ,EAAAsH,EAAA,GAAAtH,EAAAsH,EAAA,KAAA8G,KAAApO,EAAAsQ,KAAA,cAEbC,EAAYL,IAAQ,CACxBD,MACAE,UAAW,kBAAMC,QAAAC,IAAA,CAAArQ,EAAAsH,EAAA,GAAAtH,EAAAsH,EAAA,GAAAtH,EAAAsH,EAAA,KAAA8G,KAAApO,EAAAsQ,KAAA,cAEbE,EAASN,IAAQ,CACrBD,MACAE,UAAW,kBAAMnQ,EAAAsH,EAAA,GAAA8G,KAAApO,EAAAsQ,KAAA,cAGnB,OACEjL,EAAAC,EAAAC,cAACkL,EAAA,gBAAD,CAAiB3L,QAASjD,IAAiB6O,MAAOT,EAAIU,QACpDtL,EAAAC,EAAAC,cAACmK,EAAD,CAAiBM,QAASA,GACxB3K,EAAAC,EAAAC,cAACqK,EAAD,CAAgBgB,YAAaC,KAC3BxL,EAAAC,EAAAC,cAACuL,EAAD,KACEzL,EAAAC,EAAAC,cAAC2J,EAAA,OAAD,KACE7J,EAAAC,EAAAC,cAAC2J,EAAA,MAAD,CAAO6B,OAAK,EAACC,KAAK,SAASb,UAAWhO,IACtCkD,EAAAC,EAAAC,cAAC2J,EAAA,MAAD,CAAO6B,OAAK,EAACC,KAAK,UAAUb,UAAWK,IACvCnL,EAAAC,EAAAC,cAAC2J,EAAA,MAAD,CAAO6B,OAAK,EAACC,KAAK,iBAAiBb,UAAWI,IAC9ClL,EAAAC,EAAAC,cAAC2J,EAAA,MAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,OAAQnB,yJCvC7BoB,EAAA,CACbC,UAAW,QAEX9M,MAAO,GAEP+M,QAAS,GAETC,SAAU,CACRC,KADQ,SACHjN,EAAOkN,GACV,OAAOrM,OAAAQ,EAAA,EAAAR,CAAA,GAAKb,EAAUkN,EAAOlD,YCTpBmD,EAAA,CACbL,UAAW,UAEX9M,MAAO,GAEP+M,QAAS,GAETC,SAAU,CACRC,KADQ,SACHjN,EAAOkN,GACV,OAAOrM,OAAAQ,EAAA,EAAAR,CAAA,GAAKb,EAAUkN,EAAOlD,uBCMzBoD,GAAV,SAAUA,IAAV,OAAAC,EAAApM,EAAAqM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQzB,cAAI0B,eAAahN,IAAI,SAAAiN,GAAI,OAAIC,eAAKD,MAD1C,wBAAAJ,EAAAM,SAAAC,GAIA/R,cAGA,IAAM6P,EAAMmC,IAAI,CACdC,aAAanN,OAAAQ,EAAA,EAAAR,CAAA,GACRoN,wCAA8BzQ,MAEnC0Q,cAAcrN,OAAAQ,EAAA,EAAAR,CAAA,GACTsN,mBAELC,QAPc,SAON7K,GACFA,EAAI8K,KACNvH,IAAQ3J,MAAMoG,EAAI8K,KAAKC,KACd/K,EAAIgL,IACbzH,IAAQ3J,MAAMoG,EAAIgL,IAAID,KAEtBxH,IAAQ3J,MAAMoG,MAMpBqI,EAAI4C,IACFC,YAAc,CACZ3B,UAAW,aAOflB,EAAI8C,MAAMC,GACV/C,EAAI8C,MAAME,GAGVhD,EAAIf,OAAOgE,EAAQ,KAAeC,SAGlClD,EAAImD,MAAM,SACVnD,EAAIU,OAAO0C,QAAQ5B","file":"static/js/main.e8ef56a6.chunk.js","sourcesContent":["import { Modal } from 'antd';\nimport axios from 'axios';\n\nconst MAINNET = '1';\nconst RINKEBY = '4';\n\nconst networkConfigs = {};\n\nconst localNetworkConfig = {\n  sgnGateway: 'http://127.0.0.1:1317'\n};\n\nexport const getNetworkConfig = networkID => {\n  let networkConfig = localNetworkConfig;\n  if (networkConfigs[networkID]) {\n    networkConfig = networkConfigs[networkID];\n  }\n\n  networkConfig.axiosInstance = axios.create({\n    baseURL: networkConfig.sgnGateway,\n    timeout: 1000\n  });\n\n  return networkConfig;\n};\n\nexport const checkNetworkCompatbility = () => {\n  if (process.env.NODE_ENV === 'development') {\n    return;\n  }\n\n  const networkVersion = window.web3.currentProvider.networkVersion;\n  if (networkVersion !== MAINNET && networkVersion !== RINKEBY) {\n    Modal.error({\n      title: 'Current network is not supported',\n      content: 'Please switch to mainnet or ropsten'\n    });\n  }\n};\n","import Guard from './../contracts/Guard.json';\nimport CELRToken from './../contracts/CELRToken.json';\n\n// let drizzle know what contracts we want\nconst contractOptions = {\n  web3: {\n    block: false,\n    fallback: {\n      type: 'ws',\n      url: 'ws://localhost:8545'\n    }\n  },\n  contracts: [Guard, CELRToken],\n  polls: {\n    accounts: 1000,\n    blocks: 1000\n  }\n};\n\nexport default contractOptions;\n","import _ from 'lodash';\nimport web3 from 'web3';\n\nimport './network';\n\nexport const CELR = 'CELR';\n\nexport const getUnitByAddress = (supportedTokens, address) => {\n  const token = _.find(\n    supportedTokens,\n    supportedToken => supportedToken.address === address\n  );\n\n  if (!token) {\n    return '';\n  }\n  return token.symbol;\n};\n\nexport const formatCurrencyValue = (value, unit) => {\n  if (!value) {\n    return;\n  }\n\n  const num = _.toNumber(value);\n\n  if (num < 100000) {\n    return `${value} wei`;\n  }\n\n  return `${web3.utils.fromWei(value)} ${unit}`;\n};\n\nexport const formatCelrValue = value => {\n  return formatCurrencyValue(value, CELR);\n};\n","export const currencyFieldOptions = unit => ({\n  formatter: value => (value ? `${value}${unit}` : ''),\n  parser: value => value.replace(/[A-Z]/g, '')\n});\n\nexport const celrFieldOptions = currencyFieldOptions('CELR');\n\nexport const dayFieldOptions = {\n  formatter: value => (value ? `${value}day` : ''),\n  parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const blockFieldOptions = {\n  formatter: value => (value ? `${value}block` : ''),\n  parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const rateFieldOptions = {\n  formatter: value => (value ? `${value}%` : ''),\n  parser: value => value.replace(/[%]/g, '')\n};\n\nexport const minValueRule = minValue => ({\n  validator: (rule, value, callback) => {\n    if (value < minValue) {\n      const msg = `value is smaller than ${minValue}`;\n      callback(msg);\n    }\n\n    callback();\n  }\n});\n","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n  defaultProps = {\n    allowClear: true,\n    disabled: false,\n    optionFilterProp: 'children',\n    placeholder: ''\n  };\n\n  state = { value: undefined };\n\n  onChange = (value: ValueType) => this.setState({ value });\n\n  getValue = () => {\n    const { defaultValue } = this.props;\n    const { value } = this.state;\n    return value || defaultValue;\n  };\n\n  renderOptions = () => {\n    const { options } = this.props;\n    return _.map(options, ([value, text]) => (\n      <Option key={value} value={value}>\n        {text}\n      </Option>\n    ));\n  };\n\n  render() {\n    const { defaultValue } = this.props;\n    const props = {\n      ..._.omit(this.props, ['options', 'defaultValue'])\n    };\n\n    if (!props.onChange) {\n      props.onChange = this.onChange;\n    }\n    if (!_.isNil(defaultValue)) {\n      props.defaultValue = defaultValue;\n    }\n\n    return (\n      <Select {...props} showSearch={true}>\n        {this.renderOptions()}\n      </Select>\n    );\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, DatePicker, Form, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n  labelCol: {\n    sm: { span: 8 },\n    xs: { span: 24 }\n  },\n\n  wrapperCol: {\n    sm: { span: 16 },\n    xs: { span: 24 }\n  }\n};\n\nconst buttonLayout = {\n  wrapperCol: {\n    sm: { span: 3, offset: 21 },\n    xs: { span: 24 }\n  }\n};\n\nconst FIELD_MAP = {\n  date: DatePicker,\n  input: Input,\n  number: InputNumber,\n  text: Input.TextArea,\n  select: Select\n};\n\nclass CustomizeForm extends React.Component {\n  handleSubmit = e => {\n    const { form, onSubmit } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  renderFormItems = () => {\n    const { form, formItemLayout, items } = this.props;\n    const { getFieldDecorator } = form;\n\n    return _.map(items, item => {\n      const {\n        field = 'input',\n        fieldOptions,\n        initialValue,\n        label,\n        name,\n        rules\n      } = item;\n      const Field = FIELD_MAP[field];\n      const decoratorOptions = {\n        initialValue,\n        rules,\n        getValueFromEvent(...args) {\n          if (field === 'file') {\n            return args[0].fileList;\n          }\n\n          const [e] = args;\n          if (!e || !e.target) {\n            return e;\n          }\n\n          const { target } = e;\n          return target.type === 'checkbox' ? target.checked : target.value;\n        }\n      };\n\n      return (\n        <FormItem\n          key={name}\n          {...formItemLayout}\n          label={!label ? _.capitalize(name) : label}\n        >\n          {getFieldDecorator(\n            name,\n            decoratorOptions\n          )(<Field {...fieldOptions} />)}\n        </FormItem>\n      );\n    });\n  };\n\n  render() {\n    const { onSubmit, submitText } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {this.renderFormItems()}\n        {onSubmit !== _.noop && (\n          <FormItem {...buttonLayout}>\n            <Button htmlType=\"submit\" type=\"primary\">\n              {submitText}\n            </Button>\n          </FormItem>\n        )}\n      </Form>\n    );\n  }\n}\n\nCustomizeForm.defaultProps = {\n  formItemLayout: defaultFormItemLayout,\n  onSubmit: _.noop,\n  submitText: 'Save'\n};\n\nexport default Form.create({\n  onValuesChange(props, changedValues) {\n    if (props.onValuesChange) {\n      props.onValuesChange(changedValues);\n    }\n  }\n})(CustomizeForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from './form';\nimport { celrFieldOptions } from '../utils/form';\n\nclass ApproveCelrForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.CELRToken.methods\n        .approve(\n          this.contracts.Guard.address,\n          web3.utils.toWei(value.toString(), 'ether')\n        )\n        .send();\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR allowance Guard has'\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true\n          }\n        ]\n      }\n    ];\n\n    return (\n      <Modal\n        title=\"Approve CELR to Guard\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nApproveCelrForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nApproveCelrForm.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nexport default ApproveCelrForm;\n","import React from 'react';\nimport { Card, Statistic } from 'antd';\n\nimport { formatCelrValue } from '../utils/unit';\n\nfunction AccountInfo(props) {\n  const { celrValue } = props;\n\n  return (\n    <Card className=\"account-info\" title=\"Account info\">\n      <Statistic\n        title=\"CELR allowance for Guard\"\n        value={formatCelrValue(celrValue)}\n      />\n    </Card>\n  );\n}\n\nexport default AccountInfo;\n","const POLL_INTERVAL = 1000;\n\nexport const subscribeEvent = (account, contracts) => {\n  const { Guard, CELRToken } = contracts;\n\n  Guard.events.InitializeCandidate(\n    {\n      fromBlock: 0\n    },\n    (err, event) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      const { candidate } = event.returnValues;\n      Guard.methods.getCandidateInfo.cacheCall(candidate);\n    }\n  );\n\n  CELRToken.events.Approval(\n    {\n      filter: {\n        owner: account,\n        spender: Guard.address\n      }\n    },\n    (err, event) => {\n      if (err) {\n        return;\n      }\n\n      getCelrAllowance(account, contracts);\n    }\n  );\n\n  getCelrAllowance(account, contracts);\n};\n\nexport const subscribeChainInfo = (web3, dispatch) => {\n  const account = web3.currentProvider.selectedAddress;\n  let blockNumber;\n\n  setInterval(() => {\n    if (account !== web3.currentProvider.selectedAddress) {\n      window.location.reload();\n    }\n\n    return web3.eth.getBlock('latest').then(block => {\n      if (block && blockNumber !== block.number) {\n        dispatch({\n          type: 'network/save',\n          payload: { block }\n        });\n        blockNumber = block.number;\n      }\n    });\n  }, POLL_INTERVAL);\n};\n\nconst getCelrAllowance = (account, contracts) => {\n  const { CELRToken, Guard } = contracts;\n  CELRToken.methods.allowance.cacheCall(account, Guard.address);\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { withRouter, Link } from 'dva/router';\nimport { Card, Layout, Menu, Button } from 'antd';\nimport { AccountData } from 'drizzle-react-components';\n\nimport ApproveCELRForm from './components/approve-celr';\nimport AccountInfo from './components/account-info';\nimport { subscribeEvent, subscribeChainInfo } from './utils/subscribe';\nimport { getNetworkConfig } from './utils/network';\n\nimport './App.css';\n\nconst { Sider, Content, Footer } = Layout;\n\nclass App extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = { isModalVisible: false };\n    this.contracts = context.drizzle.contracts;\n    this.web3 = context.drizzle.web3;\n  }\n\n  componentWillMount() {\n    const { accounts, dispatch } = this.props;\n    subscribeEvent(accounts[0], this.contracts);\n    subscribeChainInfo(this.web3, dispatch);\n\n    dispatch({\n      type: 'network/save',\n      payload: getNetworkConfig(this.web3.currentProvider.networkVersion)\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      isModalVisible: !prevState.isModalVisible\n    }));\n  };\n\n  render() {\n    const { isModalVisible } = this.state;\n    const { children, location, CELRToken } = this.props;\n    const { pathname } = location;\n    const celerAllowance = _.values(CELRToken.allowance)[0] || {};\n\n    return (\n      <Layout>\n        <Sider>\n          <AccountInfo celrValue={celerAllowance.value} />\n          <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[pathname.slice(1)]}>\n            <Menu.Item key=\"guard\">\n              <Link to=\"/guard\">Guard</Link>\n            </Menu.Item>\n            <Menu.Item key=\"reward\">\n              <Link to=\"/reward\">Reward</Link>\n            </Menu.Item>\n            <Menu.Item className=\"approve-celr\">\n              <Button type=\"primary\" block onClick={this.toggleModal}>\n                Approve CELR\n              </Button>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content>\n            {children}\n            <ApproveCELRForm\n              visible={isModalVisible}\n              onClose={this.toggleModal}\n            />\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            Sgn ©2019 Created by Celer Network\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nApp.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { accounts, contracts } = state;\n\n  console.log(contracts);\n  return {\n    accounts,\n    CELRToken: contracts.CELRToken\n  };\n}\n\nexport default withRouter(drizzleConnect(App, mapStateToProps));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, routerRedux, Switch, Route, Redirect } from 'dva/router';\nimport Dynamic from 'dva/dynamic';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { LoadingContainer } from 'drizzle-react-components';\nimport { Spin } from 'antd';\n\nimport App from './App';\nimport contractOptions from './utils/contracts';\n\nconst { ConnectedRouter } = routerRedux;\nconst LoadingWrapper = withRouter(LoadingContainer);\n\nconst redirectToHome = () => <Redirect to=\"/guard\" />;\n\nfunction RouterConfig({ history, app }) {\n  const Guard = Dynamic({\n    app,\n    component: () => import('./routes/guard')\n  });\n  const Candidate = Dynamic({\n    app,\n    component: () => import('./routes/candidate')\n  });\n  const Reward = Dynamic({\n    app,\n    component: () => import('./routes/reward')\n  });\n\n  return (\n    <DrizzleProvider options={contractOptions} store={app._store}>\n      <ConnectedRouter history={history}>\n        <LoadingWrapper loadingComp={Spin}>\n          <App>\n            <Switch>\n              <Route exact path=\"/guard\" component={Guard} />\n              <Route exact path=\"/reward\" component={Reward} />\n              <Route exact path=\"/candidate/:id\" component={Candidate} />\n              <Route exact path=\"/\" render={redirectToHome} />\n            </Switch>\n          </App>\n        </LoadingWrapper>\n      </ConnectedRouter>\n    </DrizzleProvider>\n  );\n}\n\nRouterConfig.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default RouterConfig;\n","export default {\n  namespace: 'Guard',\n\n  state: {},\n\n  effects: {},\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    }\n  }\n};\n","export default {\n  namespace: 'network',\n\n  state: {},\n\n  effects: {},\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    }\n  }\n};\n","import dva from 'dva';\nimport createLoading from 'dva-loading';\nimport { all, fork } from 'redux-saga/effects';\nimport {\n  generateContractsInitialState,\n  drizzleReducers,\n  drizzleSagas\n} from 'drizzle';\nimport { message } from 'antd';\n\nimport contractOptions from './utils/contracts';\nimport { checkNetworkCompatbility } from './utils/network';\nimport GuardModel from './models/guard';\nimport NetworkModel from './models/network';\n\nfunction* rootSaga() {\n  yield all(drizzleSagas.map(saga => fork(saga)));\n}\n\ncheckNetworkCompatbility();\n\n// 1. Initialize\nconst app = dva({\n  initialState: {\n    ...generateContractsInitialState(contractOptions)\n  },\n  extraReducers: {\n    ...drizzleReducers\n  },\n  onError(err) {\n    if (err.resp) {\n      message.error(err.resp.msg);\n    } else if (err.srv) {\n      message.error(err.srv.msg);\n    } else {\n      message.error(err);\n    }\n  }\n});\n\n// 2. Plugins\napp.use(\n  createLoading({\n    namespace: 'loading'\n    // effects: enable effects level loading state\n  })\n);\n\n// 3. Model\n// Moved to router.js\napp.model(GuardModel);\napp.model(NetworkModel);\n\n// 4. Router\napp.router(require('./router.js').default);\n\n// 5. Start\napp.start('#root');\napp._store.runSaga(rootSaga);\n"],"sourceRoot":""}