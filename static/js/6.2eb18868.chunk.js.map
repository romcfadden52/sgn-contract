{"version":3,"sources":["utils/dpos.js","../node_modules/bech32/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/candidate/delegate-form.js","components/candidate/withdraw-form.js","components/candidate/commission-form.js","components/candidate/delegator-table.js","components/candidate/sidechain-info.js","components/candidate/slash-table.js","routes/candidate.js"],"names":["CANDIDATE_STATUS","PARAM_NAMES","PROPOSAL_STATUS","Voting","Closed","VOTE_TYPE","Yes","No","Abstain","ALPHABET","ALPHABET_MAP","z","length","x","charAt","undefined","TypeError","polymodStep","pre","b","prefixChk","prefix","chk","i","c","charCodeAt","v","__decode","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","words","push","convert","data","inBits","outBits","pad","value","bits","maxV","result","module","exports","decodeUnsafe","res","apply","arguments","decode","Error","encode","toWordsUnsafe","bytes","Array","isArray","toWords","fromWordsUnsafe","fromWords","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","DelegateForm","props","context","onSubmit","onClose","candidateId","form","current","validateFields","err","values","contracts","DPoS","methods","delegate","cacheSend","web3","utils","toWei","toString","React","createRef","drizzle","this","visible","formItems","name","field","fieldOptions","celrFieldOptions","placeholder","rules","message","required","title","onOk","onCancel","ref","items","Component","contextTypes","PropTypes","object","WithdrawForm","candidate","candidateAddr","args","status","withdrawFromUnbondedCandidate","intendWithdraw","CommissionForm","handleIncreaseCommission","network","console","log","commissionRate","rateLockEndTime","RATE_BASE","_","toNumber","block","number","announceIncreaseCommissionRate","nonIncreaseCommissionRate","state","commissionRateField","rateLockEndTimeField","drizzleConnect","columns","dataIndex","sorter","a","toBN","delegatedStake","cmp","sortOrder","render","text","formatCelrValue","nestedColumns","DelegatorTable","expandedRowRender","record","dataSource","zip","intentAmounts","intentProposedTimes","map","intentAmount","intentProposedTime","pagination","delegators","filter","delegator","sort","delegator0","delegator1","SidechainInfo","setting","axios","get","gateway","then","setState","commission_rate","stakingPool","staking_pool","catch","error","response","warning","candidate_addr","delegated_stake","delegatorAddr","delegator_addr","description","span","website","security_contact","SlashTable","slashes","slash0","slash1","validator","slash","amount","Candidate","toggleDelegateModal","prevState","isDelegateModalVisible","toggleWithdrawModal","isWithdrawModalVisible","toggleCommissionModal","isCommissionModalVisible","confirmWithdraw","confirmIncreaseCommissionRate","claimValidator","renderAction","accounts","isOwner","menu","Item","onClick","overlay","className","type","renderCandidateDetail","SGN","minSelfStake","sidechainHexAddr","chain","sidechainAddrMap","find","sidechainAddr","bech32","hexToBytes","style","marginTop","TabPane","tab","key","match","params","id","cacheCall","events","Delegate","fromBlock","event","returnValues","getDelegatorInfo","Slash","extra","candidates","getCandidateInfo"],"mappings":"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","file":"static/js/6.2eb18868.chunk.js","sourcesContent":["export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n\nexport const PARAM_NAMES = [\n    'ProposalDeposit',\n    'GovernVoteTimeout',\n    'SlashTimeout',\n    'MinValidatorNum',\n    'MaxValidatorNum',\n    'MinStakeInPool',\n    'AdvanceNoticePeriod'\n];\n\nexport const PROPOSAL_STATUS = { Voting: '1', Closed: '2' };\n\nexport const VOTE_TYPE = {\n    Yes: 1,\n    No: 2,\n    Abstain: 3\n};\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass DelegateForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onSubmit = () => {\n        const { onClose, candidateId } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const { value } = values;\n\n            this.contracts.DPoS.methods.delegate.cacheSend(\n                candidateId,\n                web3.utils.toWei(value.toString(), 'ether')\n            );\n\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n        const formItems = [\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...celrFieldOptions,\n                    placeholder: 'The amount of CELR to delegate'\n                },\n                rules: [\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Delegate Stake\"\n                visible={visible}\n                onOk={this.onSubmit}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nDelegateForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nDelegateForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default DelegateForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { celrFieldOptions } from '../../utils/form';\n\nclass WithdrawForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    onSubmit = () => {\n        const { onClose, candidate } = this.props;\n        const candidateAddr = candidate.args[0];\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            const { value } = values;\n\n            if (candidate.value.status === '0') {\n                this.contracts.DPoS.methods.withdrawFromUnbondedCandidate.cacheSend(\n                    candidateAddr,\n                    web3.utils.toWei(value.toString(), 'ether')\n                );\n            } else {\n                this.contracts.DPoS.methods.intendWithdraw.cacheSend(\n                    candidateAddr,\n                    web3.utils.toWei(value.toString(), 'ether')\n                );\n            }\n\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n        const formItems = [\n            {\n                name: 'value',\n                field: 'number',\n                fieldOptions: {\n                    ...celrFieldOptions,\n                    placeholder: 'The amount of CELR to withdraw'\n                },\n                rules: [\n                    {\n                        message: 'Please enter a value!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Withdraw Stake\"\n                visible={visible}\n                onOk={this.onSubmit}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nWithdrawForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nWithdrawForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default WithdrawForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Modal } from 'antd';\nimport { drizzleConnect } from 'drizzle-react';\n\nimport Form from '../form';\nimport { commissionRateField, rateLockEndTimeField } from '../../utils/form';\nimport { RATE_BASE } from '../../utils/constant';\n\nclass CommissionForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {};\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    handleIncreaseCommission = () => {\n        const { onClose, network, candidate } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                console.log(err);\n                return;\n            }\n\n            let { commissionRate, rateLockEndTime } = values;\n            commissionRate = commissionRate * RATE_BASE;\n            rateLockEndTime =\n                _.toNumber(rateLockEndTime) + network.block.number;\n\n            if (commissionRate > candidate.value.commissionRate) {\n                this.contracts.DPoS.methods.announceIncreaseCommissionRate.cacheSend(\n                    commissionRate,\n                    rateLockEndTime\n                );\n            } else {\n                this.contracts.DPoS.methods.nonIncreaseCommissionRate.cacheSend(\n                    commissionRate,\n                    rateLockEndTime\n                );\n            }\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n\n        const formItems = [commissionRateField, rateLockEndTimeField];\n\n        return (\n            <Modal\n                title=\"Increase Commission Rate\"\n                visible={visible}\n                onOk={this.handleIncreaseCommission}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nCommissionForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nCommissionForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { network } = state;\n\n    return {\n        network\n    };\n}\n\nexport default drizzleConnect(CommissionForm, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport web3 from 'web3';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegator'\n  },\n  {\n    title: 'Delegated Stake',\n    dataIndex: 'delegatedStake',\n    sorter: (a, b) => {\n      return web3.utils\n        .toBN(a.delegatedStake)\n        .cmp(web3.utils.toBN(b.delegatedStake));\n    },\n    sortOrder: 'descend',\n    render: text => formatCelrValue(text)\n  },\n  {\n    title: 'Undelegating Stake',\n    dataIndex: 'undelegatingStake',\n    render: text => formatCelrValue(text)\n  }\n];\n\nconst nestedColumns = [\n  {\n    title: 'Intent Withdraw Amount',\n    dataIndex: 'intentAmount'\n  },\n  {\n    title: 'Intent Withdraw Block Height',\n    dataIndex: 'intentProposedTime'\n  }\n];\n\nclass DelegatorTable extends React.Component {\n  expandedRowRender = record => {\n    const dataSource = _.zip(\n      record.intentAmounts,\n      record.intentProposedTimes\n    ).map(([intentAmount, intentProposedTime]) => ({\n      intentAmount: formatCelrValue(intentAmount),\n      intentProposedTime\n    }));\n\n    return (\n      <Table\n        columns={nestedColumns}\n        dataSource={dataSource}\n        pagination={false}\n      />\n    );\n  };\n\n  render() {\n    const { delegators } = this.props;\n    const dataSource = delegators\n      .filter(delegator => delegator.value)\n      .sort((delegator0, delegator1) => {\n        return delegator0.args[1] > delegator1.args[1];\n      })\n      .map(delegator => ({\n        ...delegator.value,\n        delegator: delegator.args[1]\n      }));\n\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n        expandedRowRender={this.expandedRowRender}\n      />\n    );\n  }\n}\n\nDelegatorTable.propTypes = {\n  delegators: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default drizzleConnect(DelegatorTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Statistic, Row, Col, message, Table } from 'antd';\nimport axios from 'axios';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n  {\n    title: 'Delegator',\n    dataIndex: 'delegatorAddr'\n  },\n  {\n    title: 'Delegated Stake',\n    dataIndex: 'delegatedStake',\n    render: text => {\n      return formatCelrValue(text);\n    }\n  }\n];\n\nclass SidechainInfo extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    const {\n      candidateId,\n      network: { setting }\n    } = props;\n    this.state = {};\n\n    axios\n      .get(`${setting.gateway}/validator/candidate/${candidateId}`)\n      .then(res => {\n        const { result } = res.data;\n\n        this.setState({\n          commissionRate: result.commission_rate,\n          stakingPool: result.staking_pool\n        });\n      })\n      .catch(err => {\n        console.error(err);\n\n        if (err.response) {\n          message.error(err.response.data.error);\n          return;\n        }\n\n        message.warning(\n          'Please config gateway url in setting to load sidechain info correctly'\n        );\n      });\n\n    axios\n      .get(`${setting.gateway}/validator/candidate-delegators/${candidateId}`)\n      .then(res => {\n        const delegators = res.data.result.map(delegator => ({\n          candidateAddr: delegator.candidate_addr,\n          delegatedStake: delegator.delegated_stake,\n          delegatorAddr: delegator.delegator_addr\n        }));\n        this.setState({\n          delegators\n        });\n      })\n      .catch(err => {\n        console.error(err);\n\n        if (err.response) {\n          message.error(err.response.data.error);\n          return;\n        }\n\n        message.warning(\n          'Please config gateway url in setting to load sidechain info correctly'\n        );\n      });\n  }\n\n  render() {\n    const {\n      commissionRate,\n      stakingPool,\n      delegators,\n      description = {}\n    } = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Commission Rate\"\n            value={`${commissionRate * 100} %`}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Staking Pool\"\n            value={formatCelrValue(stakingPool)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Website\" value={description.website || 'N/A'} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Contact\"\n            value={description.security_contact || 'N/A'}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Table dataSource={delegators} columns={columns} pagination={false} />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nSidechainInfo.propTypes = {};\n\nSidechainInfo.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { network } = state;\n\n  return {\n    network\n  };\n}\n\nexport default drizzleConnect(SidechainInfo, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from 'drizzle-react';\nimport { Table } from 'antd';\n\nimport { formatCelrValue } from '../../utils/unit';\n\nconst columns = [\n    {\n        title: 'Delegator',\n        dataIndex: 'delegator'\n    },\n    {\n        title: 'Amount',\n        dataIndex: 'amount'\n    }\n];\n\nclass SlashTable extends React.Component {\n    render() {\n        const { slashes } = this.props;\n\n        const dataSource = slashes\n            .sort((slash0, slash1) => {\n                return slash0.validator > slash1.validator;\n            })\n            .map(slash => ({\n                ...slash,\n                amount: formatCelrValue(slash.amount)\n            }));\n\n        console.log(slashes);\n        return (\n            <Table\n                dataSource={dataSource}\n                columns={columns}\n                pagination={false}\n            />\n        );\n    }\n}\n\nSlashTable.propTypes = {\n    slashes: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {};\n}\n\nexport default drizzleConnect(SlashTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport bech32 from 'bech32';\nimport web3 from 'web3';\nimport {\n    Card,\n    Skeleton,\n    Statistic,\n    Row,\n    Col,\n    Menu,\n    Dropdown,\n    Icon,\n    Tabs\n} from 'antd';\n\nimport DelegateForm from '../components/candidate/delegate-form';\nimport WithdrawForm from '../components/candidate/withdraw-form';\nimport CommissionForm from '../components/candidate/commission-form';\nimport DelegatorTable from '../components/candidate/delegator-table';\nimport SidechainInfo from '../components/candidate/sidechain-info';\nimport SlashTable from '../components/candidate/slash-table';\nimport { formatCelrValue } from '../utils/unit';\nimport { CANDIDATE_STATUS } from '../utils/dpos';\nimport { RATE_BASE } from '../utils/constant';\n\nclass Candidate extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.contracts = context.drizzle.contracts;\n        this.state = {\n            candidate: null,\n            slashes: [],\n            isDelegateModalVisible: false,\n            isWithdrawModalVisible: false,\n            isCommissionModalVisible: false\n        };\n\n        const candidateId = props.match.params.id;\n        this.contracts.SGN.methods.sidechainAddrMap.cacheCall(candidateId);\n        this.contracts.DPoS.events.Delegate(\n            {\n                fromBlock: 0,\n                filter: { candidate: candidateId }\n            },\n            (err, event) => {\n                if (err) {\n                    return;\n                }\n\n                const { delegator, candidate } = event.returnValues;\n                this.contracts.DPoS.methods.getDelegatorInfo.cacheCall(\n                    candidate,\n                    delegator\n                );\n            }\n        );\n\n        this.contracts.DPoS.events.Slash(\n            {\n                fromBlock: 0,\n                filter: { validator: candidateId }\n            },\n            (err, event) => {\n                if (err) {\n                    return;\n                }\n\n                this.setState({\n                    slashes: [...this.state.slashes, event.returnValues]\n                });\n            }\n        );\n    }\n\n    static getDerivedStateFromProps(props) {\n        const { match, DPoS = {} } = props;\n        const candidateId = match.params.id;\n        const candidates = _.values(DPoS.getCandidateInfo);\n        const candidate = _.find(\n            candidates,\n            candidate => candidate.args[0] === candidateId\n        );\n        const delegators = _.values(DPoS.getDelegatorInfo).filter(\n            delegator => delegator.args[0] === candidateId\n        );\n\n        return { candidate, candidateId, delegators };\n    }\n\n    toggleDelegateModal = () => {\n        this.setState(prevState => ({\n            isDelegateModalVisible: !prevState.isDelegateModalVisible\n        }));\n    };\n\n    toggleWithdrawModal = () => {\n        this.setState(prevState => ({\n            isWithdrawModalVisible: !prevState.isWithdrawModalVisible\n        }));\n    };\n\n    toggleCommissionModal = () => {\n        this.setState(prevState => ({\n            isCommissionModalVisible: !prevState.isCommissionModalVisible\n        }));\n    };\n\n    confirmWithdraw = () => {\n        const { candidateId } = this.state;\n\n        this.contracts.DPoS.methods.confirmWithdraw.cacheSend(candidateId);\n    };\n\n    confirmIncreaseCommissionRate = () => {\n        this.contracts.DPoS.methods.confirmIncreaseCommissionRate.cacheSend();\n    };\n\n    claimValidator = () => {\n        this.contracts.DPoS.methods.claimValidator.cacheSend();\n    };\n\n    renderAction = () => {\n        const { accounts } = this.props;\n        const { candidate } = this.state;\n        const { status } = candidate.value;\n        const isOwner = accounts[0] === candidate.args[0];\n        const menu = (\n            <Menu>\n                <Menu.Item onClick={this.toggleDelegateModal}>\n                    Delegate\n                </Menu.Item>\n                {status === '0' ? (\n                    <Menu.Item onClick={this.toggleWithdrawModal}>\n                        Withdraw\n                    </Menu.Item>\n                ) : (\n                    [\n                        <Menu.Item onClick={this.toggleWithdrawModal}>\n                            Initialize Withdraw\n                        </Menu.Item>,\n                        <Menu.Item onClick={this.confirmWithdraw}>\n                            Confirm Withdraw\n                        </Menu.Item>\n                    ]\n                )}\n                {isOwner && (\n                    <Menu.Item onClick={this.toggleCommissionModal}>\n                        Announce Increase Commission Rate\n                    </Menu.Item>\n                )}\n                {isOwner && (\n                    <Menu.Item onClick={this.confirmIncreaseCommissionRate}>\n                        Confirm Increase Commission Rate\n                    </Menu.Item>\n                )}\n                {isOwner && (\n                    <Menu.Item onClick={this.claimValidator}>\n                        Claim Validator\n                    </Menu.Item>\n                )}\n            </Menu>\n        );\n\n        return (\n            <Dropdown overlay={menu}>\n                <a className=\"ant-dropdown-link\">\n                    Actions <Icon type=\"down\" />\n                </a>\n            </Dropdown>\n        );\n    };\n\n    renderCandidateDetail = () => {\n        const { SGN } = this.props;\n        const { candidate, delegators, slashes } = this.state;\n        const candidateId = candidate.args[0];\n        const {\n            minSelfStake,\n            stakingPool,\n            status,\n            commissionRate,\n            rateLockEndTime\n        } = candidate.value;\n        const sidechainHexAddr = _.chain(SGN.sidechainAddrMap)\n            .find(data => data.args[0] === candidateId)\n            .get('value', '')\n            .value();\n        const sidechainAddr =\n            sidechainHexAddr &&\n            bech32.encode(\n                'sgn',\n                bech32.toWords(web3.utils.hexToBytes(sidechainHexAddr))\n            );\n\n        return (\n            <Row style={{ marginTop: '10px' }}>\n                <Col span={12}>\n                    <Statistic title=\"Address\" value={candidateId} />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Status\"\n                        value={CANDIDATE_STATUS[status]}\n                    />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Min Self Stake\"\n                        value={formatCelrValue(minSelfStake)}\n                    />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Staking Pool\"\n                        value={formatCelrValue(stakingPool)}\n                    />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Commission Rate\"\n                        value={`${commissionRate / RATE_BASE} %`}\n                    />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Rate Lock End Time\"\n                        value={`${rateLockEndTime} block height`}\n                    />\n                </Col>\n                <Col span={12}>\n                    <Statistic\n                        title=\"Sidechain Address\"\n                        value={sidechainAddr}\n                    />\n                </Col>\n                <Col span={24}>\n                    <Tabs>\n                        <Tabs.TabPane tab=\"Delegators\" key=\"delegators\">\n                            <DelegatorTable delegators={delegators} />\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"Sidechain\" key=\"sidechain\">\n                            <SidechainInfo candidateId={candidateId} />\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"Slashes\" key=\"slashes\">\n                            <SlashTable slashes={slashes} />\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Col>\n            </Row>\n        );\n    };\n\n    render() {\n        const {\n            candidate,\n            candidateId,\n            isDelegateModalVisible,\n            isWithdrawModalVisible,\n            isCommissionModalVisible\n        } = this.state;\n\n        if (!candidate) {\n            return <Skeleton />;\n        }\n\n        return (\n            <Card title=\"Candidate\" extra={this.renderAction()}>\n                {this.renderCandidateDetail()}\n                <DelegateForm\n                    candidateId={candidateId}\n                    visible={isDelegateModalVisible}\n                    onClose={this.toggleDelegateModal}\n                />\n                <WithdrawForm\n                    candidate={candidate}\n                    visible={isWithdrawModalVisible}\n                    onClose={this.toggleWithdrawModal}\n                />\n                <CommissionForm\n                    candidate={candidate}\n                    visible={isCommissionModalVisible}\n                    onClose={this.toggleCommissionModal}\n                />\n            </Card>\n        );\n    }\n}\n\nCandidate.propTypes = {\n    dispatch: PropTypes.func.isRequired\n};\n\nCandidate.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    const { accounts, contracts, DPoS, SGN } = state;\n    return {\n        accounts,\n        DPoS: { ...DPoS, ...contracts.DPoS },\n        SGN: { ...SGN, ...contracts.SGN }\n    };\n}\n\nexport default drizzleConnect(Candidate, mapStateToProps);\n"],"sourceRoot":""}