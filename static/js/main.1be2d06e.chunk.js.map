{"version":3,"sources":["utils/network.js","components/form.js","utils/contracts.js","utils/constant.js","utils/unit.js","utils/form.js","components/select.js","components/approve-celr.js","components/setting.js","components/account-info.js","utils/subscribe.js","App.js","router.js","models/celr-token.js","models/dpos.js","models/sgn.js","models/network.js","index.js"],"names":["networkConfigs","localNetworkConfig","getNetworkConfig","networkID","networkConfig","checkNetworkCompatbility","window","web3","currentProvider","networkVersion","Modal","error","title","content","FormItem","Form","Item","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","number","InputNumber","text","TextArea","select","Select","CustomizeForm","handleSubmit","e","props","form","onSubmit","preventDefault","validateFields","err","values","renderFormItems","formItemLayout","items","getFieldDecorator","_","map","item","field","fieldOptions","initialValue","label","name","rules","Field","decoratorOptions","getValueFromEvent","args","fileList","target","type","checked","value","key","capitalize","this","submitText","noop","htmlType","React","Component","defaultProps","labelCol","create","onValuesChange","changedValues","contractOptions","block","fallback","url","contracts","DPoS","SGN","CELRToken","polls","accounts","blocks","RATE_PRECISION","RATE_BASE","formatCelrValue","unit","toNumber","utils","fromWei","formatCurrencyValue","celrFieldOptions","formatter","parser","replace","minValueRule","minValue","validator","rule","callback","commissionRateField","placeholder","step","precision","message","required","rateLockEndTimeField","prefix","suffix","Option","allowClear","disabled","optionFilterProp","state","undefined","onChange","setState","getValue","defaultValue","renderOptions","options","omit","isNil","showSearch","ApproveCelrForm","context","onClose","current","methods","approve","address","toWei","toString","send","createRef","drizzle","visible","formItems","onOk","onCancel","ref","contextTypes","PropTypes","object","SettingForm","dispatch","console","log","payload","setting","network","gateway","placement","width","drizzleConnect","AccountInfo","celrValue","useState","showSetting","setShowSetting","className","extra","icon","onClick","getCelrAllowance","account","allowance","cacheCall","Sider","Layout","Content","Footer","App","toggleModal","prevState","isModalVisible","events","InitializeCandidate","fromBlock","event","candidate","returnValues","getCandidateInfo","CreateParamProposal","paramProposals","proposalId","Approval","filter","owner","spender","subscribeEvent","blockNumber","selectedAddress","setInterval","location","reload","eth","getBlock","then","subscribeChainInfo","children","pathname","celerAllowance","theme","mode","selectedKeys","slice","to","style","textAlign","withRouter","ConnectedRouter","routerRedux","LoadingWrapper","LoadingContainer","redirectToHome","RouterConfig","history","app","Dynamic","component","Candidate","Govern","Reward","store","_store","exact","path","render","namespace","effects","reducers","save","action","JSON","parse","localStorage","getItem","saveSetting","put","setItem","stringify","rootSaga","all","drizzleSagas","saga","fork","dva","initialState","generateContractsInitialState","extraReducers","drizzleReducers","onError","resp","msg","srv","use","createLoading","model","CELRModel","DPoSModel","SGNModel","NetworkModel","router","require","default","start","runSaga"],"mappings":"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","file":"static/js/main.1be2d06e.chunk.js","sourcesContent":["import { Modal } from 'antd';\n\nconst MAINNET = '1';\nconst ROPSTEN = '3';\nconst RINKEBY = '4';\n\nconst networkConfigs = {};\n\nconst localNetworkConfig = {};\n\nexport const getNetworkConfig = (networkID) => {\n  let networkConfig = localNetworkConfig;\n  if (networkConfigs[networkID]) {\n    networkConfig = networkConfigs[networkID];\n  }\n\n  return networkConfig;\n};\n\nexport const checkNetworkCompatbility = () => {\n  if (process.env.NODE_ENV === 'development') {\n    return;\n  }\n\n  const networkVersion = window.web3.currentProvider.networkVersion;\n  if (networkVersion !== ROPSTEN) {\n    Modal.error({\n      title: 'Current network is not supported',\n      content: 'Please switch to ropsten',\n    });\n  }\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button, DatePicker, Form, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n  labelCol: {\n    sm: { span: 8 },\n    xs: { span: 24 }\n  },\n\n  wrapperCol: {\n    sm: { span: 16 },\n    xs: { span: 24 }\n  }\n};\n\nconst buttonLayout = {\n  wrapperCol: {\n    sm: { span: 3, offset: 21 },\n    xs: { span: 24 }\n  }\n};\n\nconst FIELD_MAP = {\n  date: DatePicker,\n  input: Input,\n  number: InputNumber,\n  text: Input.TextArea,\n  select: Select\n};\n\nclass CustomizeForm extends React.Component {\n  handleSubmit = e => {\n    const { form, onSubmit } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  renderFormItems = () => {\n    const { form, formItemLayout, items } = this.props;\n    const { getFieldDecorator } = form;\n\n    return _.map(items, item => {\n      const {\n        field = 'input',\n        fieldOptions,\n        initialValue,\n        label,\n        name,\n        rules\n      } = item;\n      const Field = FIELD_MAP[field];\n      const decoratorOptions = {\n        initialValue,\n        rules,\n        getValueFromEvent(...args) {\n          if (field === 'file') {\n            return args[0].fileList;\n          }\n\n          const [e] = args;\n          if (!e || !e.target) {\n            return e;\n          }\n\n          const { target } = e;\n          return target.type === 'checkbox' ? target.checked : target.value;\n        }\n      };\n\n      return (\n        <FormItem\n          key={name}\n          {...formItemLayout}\n          label={!label ? _.capitalize(name) : label}\n        >\n          {getFieldDecorator(\n            name,\n            decoratorOptions\n          )(<Field {...fieldOptions} />)}\n        </FormItem>\n      );\n    });\n  };\n\n  render() {\n    const { onSubmit, submitText } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {this.renderFormItems()}\n        {onSubmit !== _.noop && (\n          <FormItem {...buttonLayout}>\n            <Button htmlType=\"submit\" type=\"primary\">\n              {submitText}\n            </Button>\n          </FormItem>\n        )}\n      </Form>\n    );\n  }\n}\n\nCustomizeForm.defaultProps = {\n  formItemLayout: defaultFormItemLayout,\n  onSubmit: _.noop,\n  submitText: 'Save'\n};\n\nexport default Form.create({\n  onValuesChange(props, changedValues) {\n    if (props.onValuesChange) {\n      props.onValuesChange(changedValues);\n    }\n  }\n})(CustomizeForm);\n","import DPoS from './../contracts/DPoS.json';\nimport SGN from './../contracts/SGN.json';\nimport CELRToken from './../contracts/CELRToken.json';\n\n// let drizzle know what contracts we want\nconst contractOptions = {\n  web3: {\n    block: false,\n    fallback: {\n      type: 'ws',\n      url: 'ws://localhost:8545',\n    },\n  },\n  contracts: [DPoS, SGN, CELRToken],\n  polls: {\n    accounts: 1000,\n    blocks: 1000,\n  },\n};\n\nexport default contractOptions;\n","export const EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const RATE_PRECISION = 2;\nexport const RATE_BASE = 10 ** RATE_PRECISION;\n","import _ from 'lodash';\nimport web3 from 'web3';\n\nimport './network';\n\nexport const CELR = 'CELR';\n\nexport const getUnitByAddress = (supportedTokens, address) => {\n  const token = _.find(\n    supportedTokens,\n    supportedToken => supportedToken.address === address\n  );\n\n  if (!token) {\n    return '';\n  }\n  return token.symbol;\n};\n\nexport const formatCurrencyValue = (value, unit) => {\n  if (!value) {\n    return;\n  }\n\n  const num = _.toNumber(value);\n\n  if (num < 100000) {\n    return `${value} wei`;\n  }\n\n  return `${web3.utils.fromWei(value)} ${unit}`;\n};\n\nexport const formatCelrValue = value => {\n  return formatCurrencyValue(value, CELR);\n};\n","import { RATE_PRECISION, RATE_BASE } from './constant';\n\nexport const currencyFieldOptions = (unit) => ({\n  formatter: (value) => (value ? `${value}${unit}` : ''),\n  parser: (value) => value.replace(/[A-Z]/g, ''),\n});\n\nexport const celrFieldOptions = currencyFieldOptions('CELR');\n\nexport const dayFieldOptions = {\n  formatter: (value) => (value ? `${value}day` : ''),\n  parser: (value) => value.replace(/[a-z]/g, ''),\n};\n\nexport const blockFieldOptions = {\n  formatter: (value) => (value ? `${value}block` : ''),\n  parser: (value) => value.replace(/[a-z]/g, ''),\n};\n\nexport const rateFieldOptions = {\n  formatter: (value) => (value ? `${value}%` : ''),\n  parser: (value) => value.replace(/[%]/g, ''),\n};\n\nexport const minValueRule = (minValue) => ({\n  validator: (rule, value, callback) => {\n    if (value < minValue) {\n      const msg = `value is smaller than ${minValue}`;\n      callback(msg);\n    }\n\n    callback();\n  },\n});\n\nexport const commissionRateField = {\n  name: 'commissionRate',\n  label: 'Commission Rate',\n  field: 'number',\n  fieldOptions: {\n    ...rateFieldOptions,\n    placeholder: 'The commission rate',\n    step: 1 / RATE_BASE,\n    precision: RATE_PRECISION,\n  },\n  rules: [\n    minValueRule(0),\n    {\n      message: 'Please enter a commission rate!',\n      required: true,\n    },\n  ],\n};\n\nexport const rateLockEndTimeField = {\n  name: 'rateLockEndTime',\n  label: 'Rate Lock End Time',\n  fieldOptions: {\n    placeholder: 'The rate lock end time',\n    prefix: '+',\n    suffix: 'blocks',\n  },\n  rules: [\n    {\n      message: 'Please enter a rate lock end time!',\n      required: true,\n    },\n  ],\n};\n","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n  defaultProps = {\n    allowClear: true,\n    disabled: false,\n    optionFilterProp: 'children',\n    placeholder: ''\n  };\n\n  state = { value: undefined };\n\n  onChange = (value: ValueType) => this.setState({ value });\n\n  getValue = () => {\n    const { defaultValue } = this.props;\n    const { value } = this.state;\n    return value || defaultValue;\n  };\n\n  renderOptions = () => {\n    const { options } = this.props;\n    return _.map(options, ([value, text]) => (\n      <Option key={value} value={value}>\n        {text}\n      </Option>\n    ));\n  };\n\n  render() {\n    const { defaultValue } = this.props;\n    const props = {\n      ..._.omit(this.props, ['options', 'defaultValue'])\n    };\n\n    if (!props.onChange) {\n      props.onChange = this.onChange;\n    }\n    if (!_.isNil(defaultValue)) {\n      props.defaultValue = defaultValue;\n    }\n\n    return (\n      <Select {...props} showSearch={true}>\n        {this.renderOptions()}\n      </Select>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport web3 from 'web3';\nimport { Modal } from 'antd';\n\nimport Form from './form';\nimport { celrFieldOptions } from '../utils/form';\n\nclass ApproveCelrForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  onSubmit = () => {\n    const { onClose } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      const { value } = values;\n\n      this.contracts.CELRToken.methods\n        .approve(\n          this.contracts.DPoS.address,\n          web3.utils.toWei(value.toString(), 'ether')\n        )\n        .send();\n\n      onClose();\n    });\n  };\n\n  render() {\n    const { visible, onClose } = this.props;\n    const formItems = [\n      {\n        name: 'value',\n        field: 'number',\n        fieldOptions: {\n          ...celrFieldOptions,\n          placeholder: 'The amount of CELR allowance DPoS has',\n        },\n        rules: [\n          {\n            message: 'Please enter a value!',\n            required: true,\n          },\n        ],\n      },\n    ];\n\n    return (\n      <Modal\n        title=\"Approve CELR to DPoS\"\n        visible={visible}\n        onOk={this.onSubmit}\n        onCancel={onClose}\n      >\n        <Form ref={this.form} items={formItems} />\n      </Modal>\n    );\n  }\n}\n\nApproveCelrForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nApproveCelrForm.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nexport default ApproveCelrForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Drawer } from 'antd';\nimport { drizzleConnect } from 'drizzle-react';\n\nimport Form from './form';\n\nclass SettingForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = {};\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  handleSubmit = () => {\n    const { onClose, dispatch } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      dispatch({\n        type: 'network/saveSetting',\n        payload: { setting: values },\n      });\n\n      onClose();\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      onClose,\n      network: { setting = {} },\n    } = this.props;\n\n    const formItems = [\n      {\n        name: 'gateway',\n        initialValue: setting.gateway,\n        fieldOptions: {\n          placeholder: 'The gateway URL',\n        },\n        rules: [\n          {\n            message: 'Please enter gateway URL!',\n            required: true,\n          },\n        ],\n      },\n    ];\n\n    return (\n      <Drawer\n        title=\"Setting\"\n        placement=\"right\"\n        width=\"500\"\n        onClose={onClose}\n        visible={visible}\n      >\n        <Form ref={this.form} items={formItems} onSubmit={this.handleSubmit} />\n      </Drawer>\n    );\n  }\n}\n\nSettingForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nSettingForm.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n  const { network } = state;\n\n  return {\n    network,\n  };\n}\n\nexport default drizzleConnect(SettingForm, mapStateToProps);\n","import React, { useState } from 'react';\nimport { Card, Statistic, Button, Drawer, Input } from 'antd';\n\nimport Setting from './setting';\nimport { formatCelrValue } from '../utils/unit';\n\nfunction AccountInfo(props) {\n  const { celrValue } = props;\n  const [showSetting, setShowSetting] = useState(false);\n\n  return (\n    <>\n      <Card\n        className=\"account-info\"\n        title=\"Account info\"\n        extra={\n          <Button\n            icon=\"setting\"\n            title=\"Setting\"\n            onClick={() => setShowSetting(true)}\n          />\n        }\n      >\n        <Statistic\n          title=\"CELR allowance for DPoS\"\n          value={formatCelrValue(celrValue)}\n        />\n      </Card>\n      <Setting visible={showSetting} onClose={() => setShowSetting(false)} />\n    </>\n  );\n}\n\nexport default AccountInfo;\n","const POLL_INTERVAL = 1000;\n\nexport const subscribeEvent = (account, contracts, dispatch) => {\n  const { DPoS, CELRToken } = contracts;\n\n  DPoS.events.InitializeCandidate(\n    {\n      fromBlock: 0,\n    },\n    (err, event) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      const { candidate } = event.returnValues;\n      DPoS.methods.getCandidateInfo.cacheCall(candidate);\n    }\n  );\n\n  DPoS.events.CreateParamProposal(\n    {\n      fromBlock: 0,\n    },\n    (err, event) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      DPoS.methods.paramProposals.cacheCall(event.returnValues.proposalId);\n    }\n  );\n\n  CELRToken.events.Approval(\n    {\n      filter: {\n        owner: account,\n        spender: DPoS.address,\n      },\n    },\n    (err, event) => {\n      if (err) {\n        return;\n      }\n\n      getCelrAllowance(account, contracts);\n    }\n  );\n\n  getCelrAllowance(account, contracts);\n};\n\nexport const subscribeChainInfo = (web3, dispatch) => {\n  const account = web3.currentProvider.selectedAddress;\n  let blockNumber;\n\n  setInterval(() => {\n    if (account !== web3.currentProvider.selectedAddress) {\n      window.location.reload();\n    }\n\n    return web3.eth.getBlock('latest').then((block) => {\n      if (block && blockNumber !== block.number) {\n        dispatch({\n          type: 'network/save',\n          payload: { block },\n        });\n        blockNumber = block.number;\n      }\n    });\n  }, POLL_INTERVAL);\n};\n\nconst getCelrAllowance = (account, contracts) => {\n  const { CELRToken, DPoS } = contracts;\n  CELRToken.methods.allowance.cacheCall(account, DPoS.address);\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from 'drizzle-react';\nimport { withRouter, Link } from 'dva/router';\nimport { Layout, Menu, Button } from 'antd';\n\nimport ApproveCELRForm from './components/approve-celr';\nimport AccountInfo from './components/account-info';\nimport { subscribeEvent, subscribeChainInfo } from './utils/subscribe';\nimport { getNetworkConfig } from './utils/network';\n\nimport './App.css';\n\nconst { Sider, Content, Footer } = Layout;\n\nclass App extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = { isModalVisible: false };\n    this.contracts = context.drizzle.contracts;\n    this.web3 = context.drizzle.web3;\n  }\n\n  componentWillMount() {\n    const { accounts, dispatch } = this.props;\n    subscribeEvent(accounts[0], this.contracts, dispatch);\n    subscribeChainInfo(this.web3, dispatch);\n\n    dispatch({\n      type: 'network/save',\n      payload: getNetworkConfig(this.web3.currentProvider.networkVersion),\n    });\n  }\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      isModalVisible: !prevState.isModalVisible,\n    }));\n  };\n\n  render() {\n    const { isModalVisible } = this.state;\n    const { children, location, CELRToken } = this.props;\n    const { pathname } = location;\n    const celerAllowance = _.values(CELRToken.allowance)[0] || {};\n\n    return (\n      <Layout>\n        <Sider>\n          <AccountInfo celrValue={celerAllowance.value} />\n          <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[pathname.slice(1)]}>\n            <Menu.Item key=\"dpos\">\n              <Link to=\"/dpos\">DPoS</Link>\n            </Menu.Item>\n            <Menu.Item key=\"govern\">\n              <Link to=\"/govern\">Govern</Link>\n            </Menu.Item>\n            <Menu.Item key=\"reward\">\n              <Link to=\"/reward\">Reward</Link>\n            </Menu.Item>\n            <Menu.Item className=\"approve-celr\">\n              <Button type=\"primary\" block onClick={this.toggleModal}>\n                Approve CELR\n              </Button>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content>\n            {children}\n            <ApproveCELRForm\n              visible={isModalVisible}\n              onClose={this.toggleModal}\n            />\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            Sgn ©2019 Created by Celer Network\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nApp.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n  const { accounts, contracts } = state;\n\n  return {\n    accounts,\n    CELRToken: contracts.CELRToken,\n  };\n}\n\nexport default withRouter(drizzleConnect(App, mapStateToProps));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, routerRedux, Switch, Route, Redirect } from 'dva/router';\nimport Dynamic from 'dva/dynamic';\nimport { DrizzleProvider } from 'drizzle-react';\nimport { LoadingContainer } from 'drizzle-react-components';\n\nimport App from './App';\nimport contractOptions from './utils/contracts';\n\nconst { ConnectedRouter } = routerRedux;\nconst LoadingWrapper = withRouter(LoadingContainer);\n\nconst redirectToHome = () => <Redirect to=\"/dpos\" />;\n\nfunction RouterConfig({ history, app }) {\n  const DPoS = Dynamic({\n    app,\n    component: () => import('./routes/dpos'),\n  });\n  const Candidate = Dynamic({\n    app,\n    component: () => import('./routes/candidate'),\n  });\n  const Govern = Dynamic({\n    app,\n    component: () => import('./routes/govern'),\n  });\n  const Reward = Dynamic({\n    app,\n    component: () => import('./routes/reward'),\n  });\n\n  return (\n    <DrizzleProvider options={contractOptions} store={app._store}>\n      <ConnectedRouter history={history}>\n        <LoadingWrapper>\n          <App>\n            <Switch>\n              <Route exact path=\"/dpos\" component={DPoS} />\n              <Route exact path=\"/govern\" component={Govern} />\n              <Route exact path=\"/reward\" component={Reward} />\n              <Route exact path=\"/candidate/:id\" component={Candidate} />\n              <Route exact path=\"/\" render={redirectToHome} />\n            </Switch>\n          </App>\n        </LoadingWrapper>\n      </ConnectedRouter>\n    </DrizzleProvider>\n  );\n}\n\nRouterConfig.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default RouterConfig;\n","export default {\n  namespace: 'CELRToken',\n\n  state: {},\n\n  effects: {},\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","export default {\n  namespace: 'DPoS',\n\n  state: {},\n\n  effects: {},\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","export default {\n  namespace: 'SGN',\n\n  state: {},\n\n  effects: {},\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","const SETTING_KEY = 'setting';\n\nexport default {\n  namespace: 'network',\n\n  state: {\n    setting: JSON.parse(localStorage.getItem(SETTING_KEY)) || {},\n  },\n\n  effects: {\n    *saveSetting({ payload }, { put }) {\n      const { setting } = payload;\n      localStorage.setItem(SETTING_KEY, JSON.stringify(setting));\n\n      yield put({ payload, type: 'save' });\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","import dva from 'dva';\nimport createLoading from 'dva-loading';\nimport { all, fork } from 'redux-saga/effects';\nimport {\n  generateContractsInitialState,\n  drizzleReducers,\n  drizzleSagas,\n} from 'drizzle';\nimport { message } from 'antd';\n\nimport contractOptions from './utils/contracts';\nimport { checkNetworkCompatbility } from './utils/network';\nimport CELRModel from './models/celr-token';\nimport DPoSModel from './models/dpos';\nimport SGNModel from './models/sgn';\nimport NetworkModel from './models/network';\n\nfunction* rootSaga() {\n  yield all(drizzleSagas.map((saga) => fork(saga)));\n}\n\ncheckNetworkCompatbility();\n\n// 1. Initialize\nconst app = dva({\n  initialState: {\n    ...generateContractsInitialState(contractOptions),\n  },\n  extraReducers: {\n    ...drizzleReducers,\n  },\n  onError(err) {\n    if (err.resp) {\n      message.error(err.resp.msg);\n    } else if (err.srv) {\n      message.error(err.srv.msg);\n    } else {\n      message.error(err);\n    }\n  },\n});\n\n// 2. Plugins\napp.use(\n  createLoading({\n    namespace: 'loading',\n    // effects: enable effects level loading state\n  })\n);\n\n// 3. Model\n// Moved to router.js\napp.model(CELRModel);\napp.model(DPoSModel);\napp.model(SGNModel);\napp.model(NetworkModel);\n\n// 4. Router\napp.router(require('./router.js').default);\n\n// 5. Start\napp.start('#root');\napp._store.runSaga(rootSaga);\n"],"sourceRoot":""}